分钟之后正式开始
咱们两侧都有洗手间
如果可以想去洗手间的可以先去一下
边上有水大家可以自己取一下
那一个个可以借油
(洗手间)
,(洗手间)
,(洗手间)
,(洗手间)
(洗手间)
(洗手间)
(洗手间)
(洗手间)
(洗手间)
(洗手间)
(洗手间)
(洗手间)
(洗手间)
(洗手间)
(洗手间)
(洗手间)
(洗手间)
慢著地上的牆 繼續給它發聲 告訴我何去風流風流
舉起你的雙手 挑起你的頭 離開你的自由 倫敬你的風浪
來來來
將愛上浪來 來來來
在我的心上 來來來
收買火雞愛家 讓自己
一張張的手 一杯多季的酒
浪出一曲 尚要停留啊 不被一曲獨秀
我是天上的佳 愛啊 我是地上的佳 愛啊
情深後續 我更奮風啊 只為與你同流浮
跳大石 跳大石 跳大石 跳大石
(音樂)
(音樂)
(音樂)
各位嘉賓 各位AI行業的先行者 大家下午好
由AIGC-Link主辦 龜創社 拉馬中文社區
超互聯新基建產業創新聯盟
AI支援社區 Agent社區
畢勝社區 AIGC開放社區
Prom Engineering Conference聯合主辦的
中國AIGC開發者大會即將開始
今天主要會議內容是2023年大模型行業發展總結
和2024年大模型行業的發展預測
首先讓我們歡迎現場的各位嘉賓
還有各位來擁抱AI的同業者
謝謝各位朋友
今天會議邀請到的嘉賓有
AIGC-Link發起人 航航AI合夥人
戰兵強 戰兵強
百度大模型應用生態合作總監李楊 李總
國內知名Agent框架
Agent類作者兼創始人
曾擔任某知名大模型廠商的核心團隊成員
莫辛 莫總
國內知名可視化DIY大模型框架必勝作者
秦瑞 秦總
拉馬中文社區聯合創始人
德國漢姆霍茲研究中心訪問學者
內文的中國區負責人曲東奇 曲總
國內無代碼平台
極簡雲創始人CEO陳迪 陳總
Long GPT作者
滴滴自動駕駛算法工程師
Chad GPT中文指南作者
國內提示詞開源社區
Embarrass AGI社區創建者
雲中江樹 劉遠忠 劉總
軟積木 CEO 微軟 MVP 劉海峰 劉總
AIGC開放社區核心成員
某銀行科技部高管 王妍 王總
中關村超互聯聯盟秘書長李可 李總
再次感謝各位嘉賓和蒞臨現場的參會朋友們
以及正在觀看直播的各位AI創業者
下面有請AIGC LINK發起人詹總
帶來2023年大模型發展總結及2024年的展望
歡迎詹總
好的 謝謝主持人
大家好 我是今天應該說是很高興
再有一個月就過年了
這個臘月 臘月的話每年這個咱們以前
每年到臘月的話都得總結一下
然後總結吧
今天其實上台的時候我還挺緊張的
因為上天不是那個朱鴻毅和陳妍不是鬧得挺兇的嗎
就是我還怕自己
因為咱們在座的咱們今天來會場的
以及線上直播的很多朋友
大概可能其中可能50%的都是博士或者博士後
然後可能還有很多做學術工作的
還有科研單位的
然後各個公司的這個科研研究院的
那麼的話就是說今天的話
我要分享這個主題的話
應該是更多是站在我自己過去一年的觀察
就是看到的一些行業的一些趨勢的一些總結吧
然後的話這個東西的話是這樣
就是說這個好像翻不了頁
翻不了頁 幫忙弄一下翻頁
對 就是說基於這個行業的一個總結
那麼的話就對於這個行業其實在過去一年
我們都知道飛速發展
就是大模型從無到有
再到今天應該是在很多行業裡面
已經開始進行了落地
那麼的話就是說在落地的過程中的話
有的人悲觀 有的人樂觀
當然我是屬於那個偏樂觀者
也不是完全樂觀者
那麼有的人悲觀是因為用過之後
發現這個東西怎麼不像我想像那麼好
大家就把它一棒打死
所以的話這個裡面就存在一個什麼是好
什麼是不好的這個問題
那今天的話我們就基於
2023年過去一年發展的情況
以及2024年即將產生的一些變化
就是我們一方面總結過去
另外一方面展望未來
這也是今天的話設置這個主題的一個
大家相當於共同來做一些探討
OK 我們其實就是說
愛三年的話有幾個關鍵詞
第一個最大的關鍵詞就是大模型
大模型應該說是從去年的
美國時間的11月30號
拆GDP發布
然後到後來的4、5月份
國內的大模型開始出來
其實在3月份之前
我們國內大模型是空白
在這個之後的話
其實國內大模型也慢慢地發生
也慢慢地出現
這是第一個關鍵詞
然後第二個關鍵詞是軟應用
軟應用的話主要集中在幾個方面
一個的話是微調
然後第二個有四個方面
第一個是微調
第二個的話是知識庫
第三個的話是agent
第四個是體制工程
去年其實我們應該說
每天聊的話題裡面
都是圍繞這幾個東西來聊的
那麼第三個的關鍵詞是什麼呢
它這個
再有第三個就是2B
其實就是說我們看一下愛三年的
愛三年最大的趨勢是什麼
就2B
其實沒有2C的事
應該說愛三年也不能說完全沒有
就非常佔比非常少
至少在我服務的客戶裡面
以及大多數的這些個用力裡面
還是以企業的服務為主
那麼的話就我們下面看一下
愛三年主要的發展的這些精華有哪些
第一個就是大模型的現狀
全球在愛三年的一個現狀
然後全球主要三個板塊吧
美國中國和歐洲
這三個大板塊
就大模型有一些比較大的進展
當然中東也有
但中東好像現在有點
就是基本上調出這個梯隊了
那麼在中美還有歐洲這三個裡面
美國目前是排第一的
然後歐洲是排第二
我們國內現在排第三
其實就是說歐洲有點
就是後來這趕上來的感覺
尤其它這段時間發布了那個
Mistral 8*7B之後
是直追這個就是XGP4的
當然現在還沒有到達4
但它已經到達3.5以上水平了
從測試來看
然後第二個方面就是
無代碼和現在必源的話
會目前來說開源
比開源要領先一年到一年半的時間
就是全球必源的話
最好No.1還是OpenR
然後全球在開源裡面
這個No.1水呢
就目前是歐洲的Mistral 8*7B
的這個專家模型
MOE這個模型
然後第三個的話
就是說國內的必源
如果目前的話No.1
最好的還是百度衛星一眼
這個是我們真的是實測過的
這不是為李總做廣告
這不是為禮貌
這是我們測過的
就測過之後的話
確實它們4.0
如果說非4.0可能還
還超差點意思
但4.0的話確實是不錯
但是的話成本也太高了
我說實話成本也比較高
因為可能李總會介紹
然後就是說第四
然後開源裡面No.1的話
目前是阿里的
在12月初的時候剛發布的區域問題
這個72B這個很多朋友都知道
也是就是說國內的大參數這一塊的
應該說國內的大參數這一塊吧
就是第一個的大參數模型
然後再有一個的話就是說
國內的這個和海外的
必源的差距
就目前差距大概在一年到一年半的時間
我們其實還有很長的距離要走的
然後再有一個就是中文方面的開源
其實目前來說差距不大
其實我們國內這些個
中文的開源模型
跟國外的這些個像Lama這些
它的中文能力
其實目前來說相差不是特別大
然後第二個方面軟應用
軟應用的話就是
IG的支持庫的話全面爆發
其實我們大多數去年應該很多人做應用
或者在場的我們大概
我相信應該有50%以上的
可能你們做的應用
應該大多數都還是支持庫為主
那麼支持庫的話應該是一個比較大的一個爆發率
但是面臨的問題是什麼呢
市面上現在的支持庫方案大多數
照回率只有70%左右
70分
但一般向企客戶對企業來說
他要求的照回率都是90分以上的
我不能說我庫裡有這個數據
但是你不給我顯示
我問他他說不出來
這肯定不行的
所以這是目前面臨的問題
那麼使得行業應用的話
其實落地並不是那麼容易
你要真正用在你企業裡面其實不容易落地的
然後Agent的話也全面爆發
開啟了這個智能體時代
深入到各個行業開始替代一些SaaS軟件
也不是說替代吧
就它的入口相當於跑到這個SaaS的前面去了
SaaS就變成了一個基礎的一個東西
它不再是屬於這個
第一接觸客戶層面的東西了
這是一個區別
然後再有一個就是說
其中在銷售Agent數據分析Agent
以及Tax to Circle為底層的Agent
需求是最大的
尤其是Tax to Circle
就是說文本to circle這塊的需求最大
說白了就是說我的話是希望用自然語言
跟我傳統的結構化數據去交互的
因為智智庫解決的是半結構化數據
那麼其實Agent這塊的話
就是Tax to Circle其實解決的是這個
結構化數據的一個
用大元母性來調取的問題
然後再往下的話提詞工程這塊
深受運用人員的喜愛
其實很多運用的話應該在這方面玩出了很多花樣
這塊應該有很多的
但是在2B方面
其實一般像我們在做2B應用的時候
都會先開始用提詞工程來做POC的測試
先做一個最小的Demo的一個測試樣例
其實這塊也有很大的一個應用
然後再往下的話就多摩泰
Metro內和SD的話
深受設計師和電商行業的青睞
其中的話Metro內比較受這個藝術
搞藝術或者搞這種廣告類的這些個
或者偏藝術一點的這種喜愛
那麼的話就是SD的話
比較受工業性設計比較喜愛
或者還以及產業性
比如產業性像動漫
然後工業性的像什麼耐克這一類的
或者說我們今天這個昆蟲潮裡面有很多
比如那塊有個自助咖啡機
像那種外觀設計這種效果設計
SD在這方面是很大表現的
你像耐克阿迪包括傑克·瓊斯這些
其實目前都已經用它來做一些落地了
這個其實已經在相關領域已經有落地
然後大模型在多摩泰方面的圖像
正在蠶食SD和Metro內的市場
這個是已經在發生的
因為其實本質Metro內和SD還是有點門檻的
但大模型去生成多摩泰它是沒有門檻的
所以這方面它已經在有一些蠶食
但就相當於蠶食通用市場
專業市場SD來說它還是有優勢的
然後再往下的話就是消費級的圖像生成
未來大概率會在大模型上生成
然後再往下的話圖像理解開啟了
替代AI 1.0時代的應用篇章
我們都知道在AI 1.0時代的話
怎麼說呢AI 1.0時代我們各種圖像識別
從應該說13年正式開始AI進入了應用
經過了10年的發展
到今天的話這個中間發生了很多AI應用
現在當年做這些AI應用
你可能花幾百萬上千萬
現在其實你用大模型調文接口可能幾萬塊錢就搞定了
這是帶來一個變化門檻降到零直接抹平了
而且時間成本非常低
這是帶來一個變化
然後再往下的話OpenAI的TTS開啟了
替代AI 1.0時代的語音識別的篇章
然後再往下就是當然就我們國內的模型
他們大家都有TTS這塊的這個一樣的
然後再往下就視頻方面
SDXL 1.0實現了圖像的這種即時生成
如果說你的機器比較好的話
其實是可以弄成一個視頻的
這個其實已經實現了
如果體驗過的人應該知道
然後再往下的話就站著距離使用場景還有點距離
然後最後再有一個
就OpenAI的話它提供了Agent的構建的最簡單方式JPS
那麼的話開啟了大模型發展的第二增長曲線
其實我們發現在之前其實在JPS沒有之前
之前構建Agent的非常難的
但現在有了JPS之後的話構建它非常容易
尤其是這個JPS可以採用
我們主要的嘉賓像陳總
就是基建員陳總
國外的Zippo
這些他們都是無代碼平台可以鏈接到大模型裏面
完成一些複雜的工作流
開啟了一個新的複雜工作流的一些
用大模型來調整完成的情況
再往下JPS及IPH實現的大模型的語意理解
和工作流的完美結合
然後5月份的話開啟了
開始的這個Agent開啟了SaaS的終結之路
我記得我在3月份的時候
我就說我當時我大概有一個判斷
我認為SaaS基本上這個時代快結束了
如果不擁抱大模型就結束了
所以我做軟件、做數字化的現在是平台
在我3月份的話
開始的IG的支出庫開啟了客戶行業的替代之旅
並且開啟了個人住所時代
然後其實現在已經在很多客戶
我之前服務一些客戶
他們原先公司有100多個客戶
然後相當於給他做一套IG方案之後
他把100多個客戶就替代了
就是說把100多個客戶只留下了十來個人
去更新這個支支庫以及分段數據分段處理
幹這個事情了
然後就說提詞開啟了互聯網再卸補
現在請用提詞工程構建這個東西
非常容易的做一些角色扮演
然後再往下的話
大模型開啟了白領的替代之旅
好這是去年I3年的事情
然後還有一個就大模型現在一個全球的現狀
這塊是基於我自己在最近一年就是服務的
以及曾經參與過一些個大概行業的情況
就行業分布最滲透率最高的教育醫療法律金融
這四個行業滲透率最高
然後就是說這四個行業
服裝航天醫療能源這些行業都已經開始在
這幾個行業是我真的
這些客戶他們
在我第一個需求
增強解鎖這個支支庫這個需求
然後的話客戶對於照顧率一般要求在90%
面上打開遠的TOC做了70分
我們都知道Defi了
其實我本來就想要求Defi張陸宇過來
他硬行進行優待其他安排沒過來
然後就是說當然還有這個
Fast
沒有捷徑了
然後放一下第二需求Agent
最大的這個障礙在於我們目前Agent最大障礙
就是國內咱們國內的大模型
其實目前在Agent構建方面是不太理想的
這個我們其實做了一些Agent發現
真的用國內Agent
比如說我用Open App做一個Agent
可能大概一個月就搞定了
我如果用國內的咱們國內模型來做的話
大概率一般要調兩個月以上
所以這個成本各方面還非常高的
所以這塊的話就是說是當前一個現狀
但是我們國內Agent現在也在追
也在追但是我估計什麼時候
當咱們國內的JTS Style出來的時候
那個時候可能是它成熟的時候
OK然後第三個需求就是這個微調
但是微調這個東西我最後會講是一個階段性產物
後面可能未來可能就不存在AGS但是不存在微調的
當然就不能說完全不存在那個幻影形式
然後最後一個就是需求側的企業類型
主要是國企央企上市公司
還有這個成熟類的企業為準
中小企業偏少
為什麼這麼說呢
其實以前很多人認為國企央企
它不可能去這麼先進去用這個東西
但是我告訴大家
我們服務的2B的客戶裡面
大多數都是國企央企還有上市公司為主
反而小企業少
為什麼呢現在就是確實可能整個經濟
可能就是說大家可能日子不好過
所以他們花錢的時候非常謹慎
創新可能會一定從中做到壓制
那麼反而國企還有這些他們來說
對他們來說很簡單
對於信息部來說我把這個事情做了
能幫我原先可能每天累得淚死淚活的
現在我每天我就騰出很多時間來
看報紙喝茶
然後所以大家底下國企內部的工作人員
也願意支持這個事情
因為把它解放出來了
它也不能說因為這個事情被辭職對吧
這不現實的嘛
但所以的話就是說
這也是為什麼國企央企他們動力非常強
公司它那個國企央企他們從上到下都願意
這個應該是可能跟我以前的認知是不太一樣的
我以前認為民企應該是最先去往前衝的
但其實這次反而有點不一樣
OK然後再往下
這裡的話我們說愛三年愛四年的主觀意思
我們來聊一下就是我們今年開始要怎麼幹
就是流量池
這騷已經發布了
對於所有創意者來說是一個流量池JPS騷
我對它一直定義就是
一帶了整個F騷時代終結了F騷的時代
去年我們沒有2C的機會
但今年開始有機會了
有這個2C機會了
這一個
然後第二個多模態
多模態的話其實去年不成熟
但今年開始從谷歌的Gemini
然後再到這個JP4 Vision
再到谷歌Gemini
包括國內的很多多模態等等都在往前跑
那麼多模態其實結合了
如果說結合了一些硬件設施
就是第三個就是大模型結合硬件
會是今年的一個主的主戰場
去年其實已經有很多人在嘗試了
包括我自己前兩天也嘗試了一個東西
我最後給大家展示一下
然後再往下就是說
所以再往下一個小模型
小模型這個東西可能大家不太理解
為什麼會出現小模型
小模型它是要結合
是因為前面硬件終端的延遲問題
還有硬件終端的一些個它的效率問題
所以要用到小模型
所以這個也是一個新的趨勢
然後小模型
你看現在微軟的這個微軟
那個好像是叫Fey PHI那個
就是那個什麼
就是《清華之譜》他們也有個3B的小參數的
其實小參數現在大家各家都在發
然後再有工業滲透
工業滲透多麼太出現之後
在工業領域會形成很多滲透
舉個最直接場景
比如說之前有一個工廠他找了我
他說他需要幹什麼呢
他需要就是做想用這個攝像頭去監測什麼
監測安全生產的一些個
以前他需要派一個人安全這個巡檢員
去現場的話拍照
由人去監測這個東西
到底有沒有安全問題
然後再記錄一下
其實這個工作的話未來就用
這個大模型再結合硬件就搞定了
你用個攝像頭裝在那個地方
大概幾塊錢
用個小攝像頭裝幾塊錢就搞定了
然後裝個攝像頭在那裡
就試試去抓就好了
這個其實不需要人再去巡檢了
其實這個東西是可以滲透到很多工業領域的
然後再有最後一個就是AGR
通用人工智能
其實已經
今天那個奧特曼好像提出一些個關於
相關的看法吧OK
然後這是關於I4年的大模型發展趨勢
可能會面臨價值積穿
就像在XGP出現之後
把JSPO這類的應用直接價值積穿
跟行業很多數字人公司聊過
大家構建數字人這種應用
可能就是說以前你要搞一個數字人公司
多錢可能花幾百萬
兩千萬就先搞定
就像前面說那個就其他那個場景
逐步結合硬件滲透到工業領域
最期待的是AI 1.0時代的這些
比如說
比如說台運載在這個Vision
比如那個蘋果不是新發VIA眼睛Vision嗎
那它做一個控制台的話再結合大模型
它真的是一個
我認為是一個新的形態出現
所以它對於我們個人通信用戶也是一個新形態
然後第四個預測
行業滲透將從白領的工作逐步滲透到藍領
其實今年AI3年還是對藍領工作的一個滲透
從AI4年開始會對藍領工作開始進行一個滲透
OK然後比如
比如我們現在做一個水果的
非常Easy
以前其實搞這東西不容易的
你要你首先你要把拍各種蘋果照片對吧
然後你拿回去再去訓練
然後再去裝載著這個機器上再去製造對吧
但現在的話做這東西很容易
因為你用比如說你介入這個
JB4多模態這種大模型的它的理解能力
比如說JB4Vision
那麼它可以去通過攝像頭去理解這個蘋果的位置
然後它會自己去指揮這個機械臂去幹一些事情
這個是現在是完全可以實現的
然後第五個比如說像還有這個像煤礦作業等等
這些都是可以用這個結合大模型來搞定的
OK然後第五個預測
有GPS商店開放智慧化將會帶來一波2C的流量紅利
這塊其實現在已經發生了
因為這個機器其實我做的是要早於它們發布的
但這個已經發生了這塊就不太細說了
OK我們進入這一頁
然後第六個預測
VR眼睛的設備會有個新的爆發
尤其今年蘋果Vision發布的話
VR眼睛應該會爆發的
然後AI的多模態在消費級的設備上將大放一檻
但它與這個虛擬世界的交互方式將從手機和電腦
會遷移到這個VR設備上
這個應該是大概這個我相信很多人應該有感覺
其實近期已經傳出了一些個Vision的各種宣傳片
那麼它是可以加的大模型的
如果說你我們想像一下
如果Vision加在大模型會發生什麼
這個肯定是一個更大的消費級的一個敘事
然後再往給第七個預測就是說小模型會爆發
我舉個場景
比如說你現在搞一個機器人
這個機器人比如說我們前兩天應該很多朋友都知道
那個叫Mobile ARAHA
Mobile ARAHA的話就是說
它的話其實中端的機械手臂
你如果讓它加載大模型
讓中端機械手臂能用零延遲的方式去解決問題
你只能在中端加載小模型
不然的話就是說它那個延遲問題解決不了的
你不可能說是就是說我們測過
你如果說用一個機械臂
然後接入大模型之後的話
它可能延遲有5到6秒或者7到8秒
你這個時間是受不了的
那麼的話如果說中端接一個小模型
能自我去感知解決一些問題的話
這個其實是有很大一個優勢的
也解決了這個干網問題
那麼對於解決各種硬件機器人延遲問題
和隱私問題都有很大應用
OK然後再到第八個預測
有C端用戶會大量湧入
使用基於大模型的應用的時長
會超過傳統的互聯網軟件
以及互聯網以及軟件應用的也是會發生的
然後再往就是說第九個
mobile 愛勒哈的話
就帶來了居身智能的GT1.0時刻
就是說2024年的話
居身智能將迎來3.0時刻
比如說1.0開始
沒有預期鏈的
什麼意思呢
就是我們每次都得場景
就比如說愛勒哈現在在後面
它可能一捏就碎了
它之前的記憶
它是不能處理這種大雞蛋的
可能處理大雞蛋處理不太好
那麼就包括力度啦
很多東西它可能處理不太好的
所以的話這塊單3.0時刻就不一樣
它就帶入一些個預訓練一些東西
它會具備一定的就是泛化能力
除了預加載一些具有適應環境的
泛化能力
如何解決居身智能的機器人
具備和人的這種
就是說應該是反骨吧
我們反骨一種能力
說白話我不經過大腦思考
我就能做出一些動作這種能力
這應該是居身智能可能未來會發展一個方向
需要研究突破的一個課題
然後到第十個預測
開岸彈簿型達到ChessGP的4.0的水平
在I4年大概率會發生
那麼的話就是說ChessGP5的話
將引領這個AGR的時刻
其實這個Altman他其實已經透露了
這個也是已經發生了
然後這個將帶來一些巨大影響
所以話就是說關於這個ChessGP4.0的水平
我稍微說一下
就是開岸彈簿型達到4.0的水平
現在的歐洲的Mistral 8x7B
已經到達了這個ChessGP3.5到4之間的中間水平
已經超過3.5了
但還沒到達4
但是我估計他們明年在訓練一段時間
應該大概能到達4的
OK
自己啊我前兩天
做的一個就是相當於加載大模型的
我沒有任何硬體的技術啊
我也沒有學過單品機
但對於我這種無基礎的人
我自己創立了一個方法
SP是可以練習的
那麼的話它就是一個小的一個小音箱
就在你家裡那個
加載這個大模型智能音箱
我們正拿來搞出來其實成本很低的
我這個
我們用Azure的服務端
加上收音體
加上屏幕
加上攝像頭
它就是你家裡的一個智能音箱
加載大模型的智能音箱
這裡的話有個硬件成本其實不到200塊錢
然後的話這裡為什麼說這個呢
因為這上面這個東西
其實是可以實現這兩天很火的
那個叫Rabbit I1吧
在CES上就是大家在找那個
CSE還是CES我記不清楚
然後就很火的一個東西
其實你要搞這個東西成本
硬件成本我認為是不到200塊錢的
是可以搞出來的
那個東西其實不難
無非你需要一個
比如說咱們用這個
D15或者是墨星總的
Azure的雷克米亞
後來搭一個Azure的服務
然後Azure的服務
前面用ISP這些東西
鏈接起來就可以了
然後指揮這個硬件幹火就可以了
這個成本其實很低的
然後這個大模型和硬件結合是無限可能的
然後用大模型加硬件實現養老機器人
我認為我也是想給在場的各位
以及這個屏幕前聽直播的朋友
給個建議
大家也可以往這個方向努力
這個其實包括我
我自己包括在座的可能很多人
大家都都是不願意去做
我肯定是希望有個機器人來
幫我去解決這個問題
這個未來肯定會發生的
然後讓未來養老不再是問題
讓我們一起來共建
這是關於硬件這塊的
然後下一個要說的是三年的預測
我的未來三年有個預測
就是說這個東西其實偏悲觀一點
偏悲觀一點
但是我覺得要說一下
就通用人工智能時代其實已經來臨了
那麼人類我們最好準備了嗎
第一個通用人工智能未來將會實現
一個月內它不需要任何的外部副具
從能夠實現一個GD4的水平
這個在三年沒有發生
我們今天引以為傲的GD4
未來對於AGR的這種
對於AGR來說
它只需要一個月
就能自我訓練出一個這東西
就像現在的AlphaGo那個上面
一個禮拜它自我訓練
它不需要任何的外力介入
它可以達到人類起手的高端水平
這個也一樣的
它會超越我們80%的人的認知
那麼學習速度的話遠超過我們人
那我們那時候思考
我們大概是一個什麼樣的角色
然後第二個
Agent會從人類的SOP
現在我們是用我們組織的SOP
來指揮這個大母親幹活
我們一般把這種工作流
會用在咱們實際工作裡面
充成一個Agent來解決問題
對吧
但是未來其實這個SOP
可能也會用在這個SOP
就相當於用AGR自我進化工作流
來指揮專業大母親幹活
反而現在我們的GT4
或者各種專業模型
這種東西
它反而是一個可控的一個東西
那麼到Agent這個SOP
它就不需要我們去做了
我們可能做出來的SOP
不如大母親
它自我用QSTAR這類算法
進化出的這種SOP
它可能會自我進化出一個
就是更智能的一個SOP的這種Agent
它會指揮
就相當於用AGR自我進化工作流
這個東西
那麼到AGR那個東西
它完全是不可控的
那麼第三個
就是軟件主導的時代徹底過去
我們將迎來智能硬件的機器人時代
也開啟了人類文明和規機文明的
一個共存的一個新時代
那麼第四個就是說
我們引以為豪的工具使用能力
在AGR時代會被碾壓
是吧
AGR它在
它用AGR
用Agent這種方式
它自我的工具使用能力
要比我們要強的
肯定比我們強的
這也不用想
然後那個就是AGR將接管
整個世界的生產活動的80%
我們人類的話
不再是地球上最大的生產資料
不再是最大的控制生產資料的這個群體
然後第五個
I3年是白領被替代的年代
I4年會開啟藍領
比如說什麼戰機器人
護理機器人這些
然後第六個
我們人類的話偶然創造
這些AGR會進化的
高於我們人的認知水平之外
高於我們的認知維度
那麼的話這些AGR看待我們
就像我們看螞蟻一樣
我們其實看不懂它
如何監控AGR進化可控是愛死人主流的問題
其實我也想發出一個呼籲
前一時間的就是他們那個伊利亞
我認為他的擔憂是有道理
包括他的導師黑騰
他們的擔憂是有道理的
就因為其實雖然黑騰在2006年
發布了深度學習算法
但深度學習算法如何監控它的進化方向
其實不可知的
這是現在最大的問題
他也很擔憂
他也不知道他這個東西能進化到什麼程度
OK
然後最後一個
所有的創業者的話都需要思考
如何基於AGR來能做什麼
這個其實是奧特曼說的
不是我說的
我也說明一下奧特曼說
我們所有人都要思考
如何基於AGR來做些什麼事情
而不思考今天基於GPT來幹什麼事情
然後大膽預測就是基於AGR和硬件結合
將解決人我們需要思考
就是說用通用人物智能加上硬件
來解決我們如何通過看積生命的限制
然後是所有創業者可以探索和思考的方向
這個可能是我認為是一個
我們所有人都需要思考的第七個
OK
然後到最後一個
就是我最後再總結一下AGR的一個使命
我們是希望陪伴100萬個AGR超級個體
來共同前行
大家一起來共同成長
然後再往下就是說
過去一段時間過去一年
我大概做了172個
就是各種場景的大模型的應用解決方案
在AGR每天都在發
然後再一個就是說
做了8個行業的相關的應用落地
然後再往下的話
就有1000個跟行業的1000個多個人
做過一對一的交流
那麼未來的話
在未來的話
我們能夠跟大家所有的
這個AI行業的從業者或者說擁抱者
我們一塊來成長一塊來前行
好 我今天的分享就到這裡
非常感謝大家
如果大家覺得這個DIGC link
我們也可以一塊成長
可以掃碼一下
謝謝
這是我們的視頻
感謝
OK
我下面的主持
我來做主持
這個下面我們有請
百度大模型應用生態合作總監李楊
李總帶來大模型時代的企業創新實踐應用
這個李總的話是
我覺得是很榮幸
這個百度其實我現在在座各位
應該對於百度遠方吧
就現在有遠方吧
對對對
千帆
不好意思
就是說對千帆的話應該
大家雖然都知道
但是對他深入一些東西
應該很多人不了解
我們今天的話
李總給大家
謝謝
好的
感謝詹總
也是感謝各位的到來
我今天來其實就是帶著一個形態
因為其實前一陣
在參加集合公園的活動
這個話自己個人非常認可的
他說現在其實大家不要去看百度
這句話怎麼說
其實從現在開始
從現在
這些產品的這個占比上看到
大量的優秀的產品
包括優秀的框架
都是這種小團隊或者是個人開發者
去開發出來的
這事情其實有好理解
往往都是有
他的題目都是不一定說
我一個產品出來
就很快能夠去掛著公司的Title
去做商業化的
大公司的產品
它的立項
它的審核
它整個的流程是非常複雜的
所以其實在我們內部
我們其實是看到了很多優秀的小團隊
搞出來的一些產品
沒通過立項
所以不能去做商業化
所以在這個時代其實我個人認為
確實是這個對A開發者
或者大模型應用開發者最好的一個時代
我個人我本身是負責這個
百度智能雲大模型應用生態的建設的
所以我主要溝通的這樣的一些對象
都是各種各樣的應用開發者
其中會有像今天在座的各位這種
比如說我把它歸結為新勢力
就這一波新出現的一些這種A應用開發者
它提供2B或2C的企業應用
還有一些是剛才可能詹總也提到了
SaaS廠商
傳統的企業管理軟件廠商
傳統的應用軟件廠商
這些它們其實都屬於舊勢力
對吧
其實在這一波這個AGC的浪潮到來之後
不管是新勢力還是舊勢力
都有所動作
那過程中大概
大家其實在過程中其實有交叉配合
又可以去互相成長的地方
然後今天這個片子
主要除了介紹一下相關能力以外
也跟各位分享一下
我看到了一些企業中心應用場景案例
還有後續雙方的兩波勢力應該能怎麼結合
給各位提供的一個分享
首先慣例介紹一下百度
這塊就快速過了
現在其實百度三大BG
就如果大家關注
百度很多C端的產品
都融合這個大部分的產品
比如百度底圖
比如百度網盤
那這個文庫
百度網庫文庫這個增加了
這個自動生成PPT和文靠的能力
那其實它
知道它的生成
然後網盤也增加了多模態的檢索能力
所以說這C端本身的這個營銷領域
完成了從這個內容檢索
到內容生成到內容分發
這樣一個大的鏈體
一個超過平台叫杜嘉
大家可以關注一下
C端的產品
那我是來自於智能雲
智能雲我們內部叫ACG
詹總提到的千帆平台
那其他
這個事業項目叫IDG
那他做這個自動駕駛
包括那個易莊那邊有一個自動駕駛示範區
大家應該也打過羅布快跑
這都是我們的產品
那智能雲時代呢
其實他們在智能座艙上
有一個產品升級
剛才其實詹總也提到了
大模型去做硬件終端的落地
其實智能汽車是這個
居身智囊的一個最好的
也是最先落地的一個產品形態
所以現在所有的智能汽車企業
包括魏小李行事理
包括傳統的廠商
都在研究大模型上車
在大模型上目前的狀態
還不是說把一個大參數大模型
直接部署到車端
算力跟不上
目前是做一個混合模式
小參數模型在車端解決計時問題
同時和雲端的大模型做交互
解決複雜問題
是這樣一個架構
所以其實百度現在全部的
所有的BG都在做大模型的
一個能力融合產品接待這樣一個狀態
那整個百度的產品線
尤其是我們BG一般對外的產品線
從下往上其實從這個基礎性就不說了
AI芯片
百度有一個自主資產權的昆侖芯
然後現在是二代
在市面上流通的是二代
本身可以承載一些大模型的退路
今年三代會流片
三代流片之後
其實也是可以做大模型的訓練
因為這塊咱們被卡布打得也蠻兇的
很多時候現在去
比如說我們有些私有化項目
你想去協調A800的設備也比較難
現在大多數是用生藤910B
或者海光
或者我們自己的昆侖芯去替代
所以明年其實這個國產
GPU芯片應該也是一個比較好的賽道
因為國產狀態
個人感覺
這個脖子還是不會那麼快就鬆開了
也確實給了國產的GPU芯片的
一個很好的成長機會
在網上各位開發者肯定也用過
就是百度有個開源框架
叫PedPad
肯定用過這個東西
PedPad目前本身也是在大模型上
做了很多工具
他們升級了PedPad的很多平臺
打包了一個叫PedX的工具
然後自己也做了一個
叫新河社區的在線的一個平臺
大家可以上去
利用PedPad的所有工具去開
自己的應用去對外發布等等
所以說PedPad是我們TPG做的
TPG相當於大家可以理解成
是百度的這樣的一個研究機構
就是它的底層技術
包括微信大模型本身也是TPG研發的
我們是做商業應用
在網上是基於百度的TPG提供的
PedPad提供的一系列訓練工具
我們做了一系列大模型
其中比較有名的
就是現在對外的文心系列
現在最新的版本是文心4
其中其實我們本身除了文心4以外
還有很多比如說做科技計算的模型
本身做多摩泰的模型
或者是做其他的專業領域的模型
其實有很多
現在對外發布提供商業服務的
主要就文心4
在網上其實百度本身也做應用
但是可能就聚焦在幾個小的領域
這是一些典型的行業
剛才其實詹總講到了工業領域的應用
百度之前是做工業質檢
國內第一名的廠商
工業質檢這個東西確實是
就是因為場景高度敵散化
所以它的交付本身困難度還是很高的
工業到底能不能發展到在工業質檢領域
既達到現在的這種節拍要求
又達到這個准票率的要求
這個事情還是得看
因為可能還得是大模型加小模型融合的方式
工業質檢恐怕就是這樣的一個狀態
那下面給各位這個
這是我們平常對外去講的
一個現在這個大模型生態的一個分層
其實現在確實也是這個樣子
但是其實國內的大模型生態
一直都在不斷的調查
往下從大往上都分析得到
包括算力廠商
大型廠商
行業廠商
國際工具廠商
營運廠商
技術部長
大概其實可以這麼分
但是不是說每一個企業組織
它只具備一個屬性
一個來說
拿百度來說
百度本身既是算力廠商
又是大模型廠商
它又是大模型工具廠商
它又是營運廠商
這就是百度的狀態
那可能比如說
咱們現在這個可能是
如果咱們比如說是生物
生物可能就是大方型工具廠商
但其實它也可能是大模型工具廠商
我可能基於我們的這個產業工具
去做某幾個行業
去做某幾個行業應用
所以說這個角色其實很多時候
一個組織都會角色變形的
那整個的一個狀態
現在不斷的變化了
舉例來說
剛才也提到了
行業模型廠商
行業模型廠商
後面的動作也存在
行業模型廠商
就前一陣子
就是合營運廠商
幾乎是合並的
舉例來說
如果你沒有做前陣營運廠商
單純做一個行業應用
大概你是沒有我的經驗
是吧
你做了個行業模型
你不讓人去對待成果
所以說這個整個的工具
是不斷的變化
而且後續的行業模型
也會有一個時間
行業模型會可能在通道
能力到達這個程度的時候
行業模型還會存在
其實可以用廠商
所以說整個收費工具
也能夠把這個狀態
那現在呢
其實每個層
每一層都有每一層的特點
就比模型廠商來講
剛才其實那個
再過也講到
包括其中一個
這個作為藝園廠商
最大的問題就是
現在的開發廠商好
我怎麼工人擺商好啊
對吧
你們付出這麼貴的錢
就帶這樣的問題
其實我覺得現在這個灶害
是特別好的
藝人廠商和開業廠商
是其中一層的一個灶害
那可能我們一次發布之後
它的整個模型
到底有幾個廠商
但是隨著發布時間過的
開業廠商們
把這個技術
沒有可能有
新的開業廠商也出來
都比這個還好
對吧
都是正常的
其實我怎麼說
給客戶去
尤其是面向客戶
我大多數是會推薦
幣源廠商的產品
因為客戶呢
他不像在座的開發者
有這麼強的一個技術能力
對他對模型的應用
更需要去這個原廠
提供更多的商業化服務來解決
那面對開發者呢
其實大家選擇的理由
就會比較多了
比如說團隊啊
從整個的成本啊
從整個這個
服務的持續性啊
等等的角度
那幣源廠商和開業廠商
都是可以根據
咱們的一些產品定位
去選擇的
那其實百度呢
我在這兒強調一點
就百度給各位提供的
不光是一個技術支撐
因為我本身做生態業務的
就是
百度和開發商的這些應用夥伴
都會有很大程度的資源的支持
舉例來說
我們在做一些項目的時候
我們會帶著我們的應用生態夥伴
一起去項目上去落地
比如說能源領域的項目
我們都會帶著
就之前百度有
搞了一個文心碑嘛
文心碑的獲獎者
文碑的獲獎企業
基本上百度都投了
我們很多項目都帶著
文心碑企業一起去
在一線去推廣
所以說其實這個
也是和幣源廠商合作的一個好處
就是說他可能在商機的
這個通路上
會給應用廠商更大的一個價值
所以這也是我做的
一個主要的工作
那行業行業模型
又說到這一點
行業模型到底後續
會不會持續存在
說實話不知道
不知道
行業模型是需要的
畢竟通路大文型
他很多行業場景
行業黑話
他是聽不懂的
回答的問題專業性也不夠
舉兩個例子
這兩個行業模型
都是已經
部署在我們千帆平台上的
百度本身其實是支持
三方商業化的行業模型
部署到我們千帆平台上的
我們有一系列的
這樣的一些分潤機制
和商業模式
去和這樣的行業模型廠商
去這個對外去
本身現在一個是
現在部署兩個
一個是這個杜小滿的
宣言大步行
他專門做金融行業的
其實我們也測試過
確實一些
複雜的金融領域的問題
杜小滿能回答得更好
當然他面向C端
他主要做的是投資
產品
利財
相關的這些場景的問答
最後的答案還是非常專業的
還有一個是Chain Law
他是一個法律模型
主要是解決一些
民事糾紛相關的一些問題
所以說如果基於這兩款模型
想做任何的行業應用的話
直接在千帆平台上
調用就可以了
那現在的問題呢
其實我覺得行業模型這些廠商
或者說行業應用廠商最大的優勢
還是在於他本身的這個行業
農耗和行業數據的積累
因為本身行業模型的訓練技術
其實大概率
大家都是可以掌握的
但是這行業數據和行業農耗
是你沒有辦法快速積累的
那同時呢
這個新的銳條技術的變化
我覺得也會對後續的行業模型
帶來一些影響
那可能後續
除了現在咱們常用的
POSTPRO,TREA,SFT等方式
甚至我看前兩天
我沒仔細看那個文章
說有這種純對話式微調的方式
已經快出現了
所以說後續這樣的行業模型廠商
他到底的整個的企業的形態
業務形態會怎麽變化
咱們也拭目以待
那再有
剛才詹總也提到了
就是去年整個一年
可能B端和C端
其實都是有大模型的這個
不個的模型
其實從百度全局視角上來看
我們看到的
我們會每天看前端平臺
後臺的這個接口的調用情況
目前百度平臺上80%的
來自於C端
80%的接口調用來自於C端
那目前我看到的一些
做大模型應用廠商
盈利的也是面向C端服務的
也是面向C端服務的
所以說其實可能和其他領域一樣
大模型技術
最先還是會在C端蓬勃起來
但是B端
它是一個比較有特點的
高度離散化
高度專業化的一個市場
它是會持久的會留存的
C端的應用疊帶也會比較快
所以這是應用側的一個
C端和B端的一個狀態
那這個其實
如果各位有做C端應用的話
也可以關註一下百度的臨近矩陣
剛才其實那個詹董講了
這個GPTSDAO
臨近矩陣基本上就是
百度要打造的GPTSDAO
那這個GPTSDAO
我們給大家什麼樣
百度搜索的流量
如果你可以在臨近矩陣後續上線
包括和他們
當然這不是我們團隊的
這是大搜團隊的
然後他們會討論一個
比較好的商業合作模式的話
在搜索框裏搜索
可能會直接調用到你這個應用的能力
所以說這個是臨近矩陣
搜索的入口
造出來的面向
大模型開發者的一個應用平臺
大家也可以去關註一下
那剛才也提到了
我們智能雲核心的產品就是千帆平臺
千帆平臺大概什麼一個定位
這張圖你也可以看出來
它本身上是面向
四個層次的用戶去使用的
這下一層其實就是基礎雲了
這個不多說
然後再往上一層是
它是一個整個GPU的算力平臺
它可以做大模型的訓練和託管部署服務
那本身我相信
如果是咱們各位開發者有模型訓練
或者是模型託管部署的需求的話
百度本身我們這個上面叫白鴿
它的變形計算能力
它的推理加速能力
在業內都是非常好的
就在成本的整個性價比的考量上
都是非常不錯的
今天時間關系不多介紹
有機會大家可以去官網看一下
再往上一層我們叫Model Builder層
它本身是做大模型的定制開發的
就剛才講到了大模型的整個的數據準備
微調訓練或者是重訓
或者是整個的插件掛載
都可以在整個平臺上解決
現在比較流行就叫LM Ops
學以前Dev Ops那個理念
它是模型全生命周期的一個工具鏈
千山平臺的主功能在這
就是Model Builder層
再往上其實是最近在做的一個
就是App Builder層
但App Builder層說實話
在座各位開發者有很多工具
已經走得比我們領先和成熟了
有好多商業化向我們落地
所以這塊
百度也會跟各位優秀的工具去學習
不斷的去做一些這種App Builder
本身百度做這些應用的邏輯
它是組件
通過提供各種各樣的SDK組件
或者API接口
讓大家去集成去調用
然後來實現不同的App Builder
同時我們App Builder會調用
下層的大模型服務
所以本質上做這一層
也是為了讓更多開發者用起來
去更好的去推廣我們整個
這個模型層的服務
這樣一個目標
那整個就是和剛才講到了
整個白狗算力平臺
這個就不講了
你像現在我們這個
像面壁智能的產品
還未來的這個模型
都是在我們整個白狗平臺
這個這個白狗平臺上訓練出來的
那整個工具店簡單快速過一下
剛才也講到了
全生命週期都支持
特別提一點
千帆平臺上不止只部署了文西模型
大家可以看到我們42個
預製大模型
尤其剛才這種提到了MOE
最新出的那個Mistrone
我們現在也上線了
所以說大家其實不光是調用文西
也可以用這個百度千帆平臺
調用你們熟悉的LAMB2
調用你們熟悉的其他的
比如百川
甚至零一萬物
這些開業模型
我們都不處在上面了
對吧
其實本質上就想讓大家
有一個一站式的模型廣場
上來了所有的模型服務
所有的模型微調
模型開發的功能
在我們這上都搞定
這個是千帆的定位
它不是說我做這個東西
就是給文西一眼專項服務的
當然還是最推薦大家調用文西一眼了
還有其他的一些
包括這個Promo優化模板
Promo大模型自動去優化
還有一些這個
關於數據處理
預製了很多訓練語料
業界大家能找到的這個
基本上都在上面了
包括你自己去做一些
語料增強
這些功能都是支持的
到最後還有一些
可以支持開發者去自動的
自己的自定義插頭
來擴展大模型的能力
那剩下一些具體的功能就不說了
這是關於這個模型的數據處理的
訓練方式的
模型評估和壓縮的
然後包括整個插件的這個開發和掛載
整個相對來說
整個的這個工具鏈還是非常完整
也歡迎大家在線去體驗
剛才講到App Builder
App Builder本身現在其實也是一個開發中的狀態
現在已經發布了
一系列的用於RAG的框架
一系列用於Agent框架
還有一系列比如說一些文本處理
向量化向量檢索等等
它這個都是做以這種
你看像組件的方式
組件一組件組件三
都是一組件的方式部署在Agent框架上
大家可以隨意調用
下面說一下這個
最近看到的一些案例
尤其可能很多東西是涉及到
我剛才講到的兩個勢力的
其實我一直覺得面對最終客戶和面對夥伴的時候
其實我發現這兩波基本上幾乎是割裂開的
幾乎是割裂開的
舉例來說
現在這個可能咱們遇到的像我們的這個
像Defi、Venus
包括咱FastGP、Bisham
這些我個人都歸到這個新勢力的一個視角
大家可能在客戶接觸的時候
可能更多的時候是從零到一起一個項目
大家可能沒有接過
我去改造傳統系統的項目
我改造一個傳統業務系統
讓它具備大模型能力這樣的項目
大家可能現在也不少
但實際上
傳統的企業應用系統
他們的地盤是非常穩固的
他們在多年的這樣一個哥倫的狀態中
他們有自己很固定的一個入口
企業端的入口很固定的用戶
舉例來說
你一個企業的HR系統
那就是那些HR軟件廠商
給HR的用戶去應用的
那這個時候這個HR系統
要本身具備大模型的能力
大概一個什麽路徑呢
目前的狀態是只能等著他們自己去提升
自己去提升
但是恰恰是右側的這些傳統應用軟件廠商
他自己從團隊建設
從大模型的技術理解上
他不如左側的這些新勢力
所以說他本身做的一些模型應用效果
並不是那麽好
其實新勢力也有一個問題
新勢力他現在做的大多數
非常獨立的一個RAID的項目
非常獨立的一個Agent項目等等
如果這兩邊能融合一下
其實我個人認為
才是能夠把整個企業先有的這些IT資產
重新融入大模型能力的一個
最大的一個提升機會
舉個例子
你看現在其實剛才其實講到了
大家都知道今年最熱的
像銀行像能源像教育這類的行業醫療
這類的行業做了很多
但其實我跟很多製造業企業也交流過
尤其是車企
他們其實也是非常在意的
但是大家知道對於製造業企業來說
最重要的是什麽
時間到了我這樣快一點
最重要的是全價值鏈
大模型到底在全價值鏈上能發揮哪些作用
我們其實之前捋過一個
延展供銷服務整個運營管理所有的領域
有價值的我們打了一個火
這裏當然包括有一些沒落地的
比如說一些複雜的產品設計代碼生成
可以看其實還是在運營管理領域
大模型的核心價值目前還產生在運營管理領域
那什麽時候對於這些製造業企業來說
大模型能在產品研發
和整個生產作業效能提升上
帶來很大的一個幫助
這個時候大模型還具備了
在這些產業上落地的一個真正的效果
那其實也是有一些這個
也是有一些公司在不斷探索的
給他訓練了一個專門生成芯片代碼的模型
然後呢
三維設計的軟件
這些腳本能不能用大模型去生成
其實也是支持的
不過現在的功能都很弱
都比較弱
而且尤其是這個現在
就至少我拿我們文心舉例
文心在早期訓練的時候
這方面的輿料是非常少的
所以說咱們各位開發者
如果能有一個對這方面
有非常深的認知的
有這些數據積累的
去訓練一個在整個圖像生成
工業設計領域的模型
也是非常有價值
包括數字產品的設計其實比較多了
數字產品
一個數字產品包括前端後端
後端現在代碼工具一大堆
模型的能力
不管是設計工具
還是設計規範
還是規範檢查
都是可以通過大模型能力去檢查的
去去生成
包括剛才講的知識管理
知識管理形式
知識管理是個老話題
知識管理是個老話題
本身
就是
但其實
外國人
百度本身也作命
其實是和這個百度之前的知識圖譜啊
等等能力都融合了
其實現在這個產品就是
在知識圖譜
還有原來起初產品之上
加了這樣的一個檢索償回能力
去做了一個新的產品
這個產品本身現在也是
這個產品本身現在也是
有些包括咱們強強的銀光力
銀光力有一個數字人
命運
有大量的AI面試
但目前呢
面試的準確率和
財運
還是比較低的
地域智能
也是我們一個應用夥伴
它本身其實在這個面試過程中
大量的這種大模型能力
整個的這個AI面試的效果
追蹤效果
就是最高的一天
它的這個AI面試的量
都是達兩三萬員工的一個招聘量
比如說這個工廠招聘的時候
所以說是一個非常好的一個刪化案例
AX領域確實它整個的這個
一些需要人
要人的
或這個個案
擺脫自己的產品
但實際上呢
在企業裡面
有大量的這個產品
其實是還是有的
比如說
像我們對於交流物的職員也交流過
那法輪功職員作為老婆我也想說
他們本身在大模型能力的提手工科上
就沒有那麽快
所以其實在座的各位也可以嘗試著
去和這些廠商去交流
那他們的這個原有的入口
加上咱們新的能力
其實會構建一些新的商業化的空間
時間關係就不多放了
那這個是
這其實是我們認為到最後應該說
一個整個大模型在前端
一個比較好的一個形態
就是在整個的企業IT架構上面
有一個agent層
agent層是可以跨ego系統
去獲取數據和調取功能的
那客戶不用在意他後端的系統
到底是哪個廠商構建的
通過agent層
通過你在agent層註冊的這樣的服務和插件
讓大模型幫你解決跨系統的數據查詢
跨系統業務分析
跨系統的這個業務功能的發起等等問題
所以說這個產品其實是
基於我們這裏面做的一個
這樣一個企業全局的原型
這只是原型啊
一直在和客戶打磨
那最大的一個系統呢
就是要求你客戶有原型IT基礎
原型IT資產用
同時呢你找到這個原型系統的這個
可能就有很多老系統
它甚至都不是為服務架構的
它是很難把它的接口和能力調出來的
原型還得做一些改造
這是一個比較大的工廠
那最後我先跟各位分享一下
我們現在對於這個一個傳統企業IT架構
融入大模型能力以後
大概的一個參考推薦
首先你肯定會在這個
基礎設施和pass層之間
增加一個mass負層
mass負層大概也分三個領域
一個是你的基礎模型層
就肯定會有通用模型
不管是過於的還是基礎不熟的
那在網上會有你的行業模型
或者場景模型或者是小模型
解決各種各樣複雜的不同場景的問題
那在網上需要納管這個
所有模型的一個整個平臺
不管是千帆也好
還是咱們在做開發者自己的產品也好
總之需要一個所有納管平臺
沒有這種納管平臺呢
模型就會變成新時代的沿途
一個應用帶一個模型
一個應用帶一個模型
一個應用帶一個模型
對吧
一個體驗如果是給這些模型都配備算力的話
那可以想像
大家到底是怎麼規劃這些算力
這些模型的應用
這些模型對上段應用的支撐
對吧
所以說對於比較大型的行業結果
我們講
我們表演一個初步的底之後
對於這個問題
那在這之上
可能在整個的這個應用平臺
和應用系統在這是有結合點的
咱們要基於自己的Agent框架
咱們要基於自己的開發平臺
去構建和應用系統的結合關系
在網上其實就剛才說的
最好的方式就是構建一個全局助手
一個全局Agent
服務整個不同的角色
不同的這樣的一個場景訴求
解決問題其實就是通過這個語言交互的方式
通過服務註冊機制
通過這個和下段系統的這樣的一個
易構系統的一個交互
最終能夠大幅的提升整個系統應用效率和用戶體驗
這個是最後的一個比較推薦的一個參考架構
今天跟各位分享一下
以上其實就是今天跟各位交流的一些內容
反正總結一句話
還是希望咱們明年能在這個就是新一代的這個
多多交流多多配合
尤其百度願意在
MGT的這樣的一個角色
包括我們這兩類夥伴都有
那也歡迎各位這個加入百度的整個的這個大模型應用生態的體系
謝謝各位
感謝李楊總這個賣好像有點
但是這個好像線上朋友說是有點那個
炸賣什麼的
我在想那個那個直播直播朋友
直播那個家綺
你要把他切成電腦收音吧
我看現場大家好像是那個說聲音
OK
感謝李楊總剛才的對於百度的一個整個的一個介紹
因為其實我之前對於百度的整個他的一個產業
很多方面其實不是很了解
尤其大模型這塊的這次的話
算有個比較全面的一個了解
我相信大家可能在座的各位現場的朋友
以及現場朋友應該有一個了解
我們下面的話
呃有請Agent框架的就是莫總莫總的話
我稍微介紹一下Agent類的話
目前是在Agent框架裡面
在全球的話
是比較一個就是受大家歡迎的一個Agent框架
因為它使得我們構建Agent會變得非常的容易
這個框架的話
是我早期在Agent Link也分享過很多次
然後包括莫總近期的話
對Agent這塊的又做了一些
基於Agent框架的行業實際用力
可能他一會分享的時候
也會提到一些思想新的思想
還有新的一些個Agent相關東西
然後下面也請莫總帶來Agent大模型能力的發麻器
歡迎
OK謝謝鄭總介紹
然後也非常感謝這個Agent Link給出這樣的一個機會
對然後23年已經跟這個Agent Link這邊
做了很多次合作了
然後可能有一些這個朋友已經覺得
我是老面孔了對
然後今天講的內容呢
我能保證大概60%到70%以上的這個內容
還是有新內容的
所以大家不用擔心這個問題
OK先做一下這個我們的一個介紹
就是我們在做的事情呢
是一個叫做Agent Link的這樣的一個應用開發框架
這個應用開發框架呢
它的一個核心的一個目標呢
是幫助我們的開發者去完成
對這個Agent的這樣的一個結構的開發
而且能夠在代碼裡面去使用到
這個呢可能在一定程度上會回答兩種
剛才提出來的一個比較關鍵的一個問題
就是我們的新勢力
和這個我們的這個傳統的這個企業
或者是我們傳統的這個勢力裡面的一些
模塊該怎麼銜接的一個問題
對因為我們如果要去做這個銜接的話
或者是推翻
而實際上我們要想辦法去做融合
而我們的框架呢
正在想這樣的一個辦法呢
幫助我們的開發者
幫助我們這個
傳統應用裡面的一些這個功能
怎麼樣去
更好的把AI的能力應用到
自己已有的這樣的一個能力裡面來
但當然這個是我們後半部分
可能會講到的一些具體的一個點
然後我們從這個
今天的這一次的這個宣講來講呢
我們按照它現在的這個節奏來
那我們今天主要的一個主題呢
是介紹這個Agent智能體
那給智能體這樣一個
對給智能體這邊的一個
比較關鍵的一個定義呢
我們會認為呢
它是模型的一個能力的
一個關鍵的放大器
那接下來呢就從
我們的這個演示裡面來
給大家一步一步的推導說
為什麼會有這樣的一個結論
好首先呢我們
先討論一個第一個問題
因為今天在場人比較多
我覺得不互動了
就是什麼是大型語言模型
為什麼會有這個結論呢
首先呢我們
先討論一個第一個問題
什麼是大型語言模型
在我們過去的一年
我們看到了這個
大型語言模型的應用的一個
蓬勃的發展的一個過程
那從其實是
已經算是前年的年底了
這個Chat GPT
它發布了之後呢
我們很多的這個
用戶呢對模型的第一感知
就是這樣的一個狀態
包括其實我們剛才看到這個
文型的演示裡面
有大量的這個演示的界面
其實我們也會用到這樣的一個界面
來給大家看到說
我們的一個模型
到底的能力怎麼樣
那這樣的一個界面
就是大型語言模型嗎
其實不是的
就是我們大家在看到了
這樣的一個界面
已經不僅僅是這個大型語言模型了
為什麼這麼說呢
其實我們來看啊
就是大型語言模型
其實是這樣的一個結構
我們通過大量的數據
進行預先的對模型的預先訓練
然後呢對用於
讓這個模型用於對這個輸入內容
進行輸出預測
而且呢
在像Chat GPT這樣的一些
要能夠跟我們人類
有好交互
然後能夠給出更好回答的
這樣的一些模型呢
通常還需要
這個回覆
進行專門那個對其的調整優化
而這樣的一系列的工作
做完了之後
生成的那一套服務
在左邊和右邊對它進行封裝
允許它去進行輸入和輸出
這整個這一套的一個服務
才是我們在談的
大型語言模型的一個基底
而在這個基底之上
我們要達到
像剛才看到的那樣的一個界面
實際上這上面還有很多工作要做
我們在上面
先做了這個語言模型
但是我們要對它進行接口和封裝
封裝來了之後呢
我們要通過這個對話界面
讓我們的這個用戶
每一次的這個對話
有一個地方可以存儲
然後這個界面
還跟後面的一個後台服務
還會有一些關聯
所以呢
整個我們看到了
這個大型的一個結構
這樣的一個結構
它其實才是我們看到的
所謂的chipboard這樣的一個產品
就是對話型的這樣的一個界面
對話型的機器人這樣的一個產品
這才是我們用戶看到的
所謂的大模型
實際上它已經不是
僅僅的一個模型了
它已經是一個叫做大模型產品
這樣的一個概念的東西
但是呢
在我們去年的一年
我們都會看到說
像chipboard這樣的一個方案呢
其實是具有侷限性的
具體的侷限性在哪裡呢
我們可以看到
其實去年我們整個這個
用戶的一個使用啊
就是跑在前面的人
可能都會感受到說
好像有這麼一個轉折的
這樣的一個
氣氛的一個轉折的一個狀態
這個狀態是什麼呢
就是跑來前面的人
一開始很興奮
非常興奮
興奮到說什麼呢
就是說我們認為
這個模型的能力非常非常強了
它已經能夠做很多很多事
能聽懂我們說的話
能夠做高考題
然後呢
它可以替代很多很多的角色
這個是在其實在去年的
大概三四月份的時候
我們會看到的這樣的一個狀態
但實際上我們到了年中
到了年中這一段時間呢
我們會感受到一個滑坡
這個滑坡有很多的
就衝進來的人又退回去了
他們會給出另外一個
完全反過來的一個評價說
這個模型好像有問題
它在編故事
它的這個可控性不足
然後呢
它這個多輪對話會遺忘東西
但我們看到這樣的一個狀態呢
首先我們看到了現象
我們要去問一個問題
就是為什麼會發生這樣的一個問題
我們來看
左邊是我們這個
左下角呢
其實是我們的這個用戶
可以感知到的一些狀態
因為我們其實
使用插Bot界面的用戶
大部分的用戶他們感受到的是
底下這種感覺
這個對話很差
然後呢這個
我跟我畫的這個背後的這個大圖形記錄
顯得這個知識的這個含量很足
然後又有條理又有邏輯
但實際上呢
它是沒有辦法穿透中間這根線
去看到這根線背後
我們使用到的一些這個技術和技巧
來幫助他們產生這樣的一個感覺
比如說我們在這裡面
通過具有實際性的這個
語料去做的預訓練模型
也就意味著其實對於新聞來講
它其實不知道
但是我們的用戶其實不知道呀
我們用戶依然會去問
可能用戶就會嘗試說
你告訴我昨天最新的這個新聞
是什麼樣的
最新的黃金股價是什麼樣的
最近黃金價格什麼樣的
股票價格什麼樣的
經常會有這樣的問題
而這樣的問題如果是對到
傳統的這個插Bot這樣的一個模型
其實沒法用
對 第二個就是我們也知道說
其實模型的整個記憶的這種感覺
也是因為我們在每次
模型調用的時候
我們把所有的全條信息
傳遞給了模型
而這樣的一個動作
是封裝在我們的插Bot的
這個介面之後的
而我們大部分用戶是無法感知的
而這樣的一個動作
就造成了一個什麼現象呢
就是因為我們模型其實
在輸入的這個信息上面
是有一個限制量的
就會導致說
我們的用戶就會感覺
我跟他多對話幾輪了之後
他就把剛開始說話的
那個內容給忘掉了
這就是因為我們一開始
用的這個插Bot的技術
其實非常簡單
我們沒有做什麼
所謂的複雜的記憶管理
我們做的事情就是
把所有的消息一氣堆上來
然後當話已經說得足夠足夠多了
已經超出模型可容納的範圍之後
我們把最遠的那條話給丟掉了
那就是我們看到的以往的一個狀態
而這些狀態對於用戶來講
是不可知的
而我們的用戶
在我們的這個傳統的這種
文學影視作品的領導之下
通常他的感覺就是
你既然讓我感受到了
左上角這樣一個感覺
我就認為你應該是右邊那個樣子
對 它是一個很聰明的
具有這種智能的
一個身體的這種結構的
這樣的一個東西
既然我們在討論人工智能
它應該就是一個類人體
但實際上如果單純的
按照左上角這樣的一個結構
我們做不到
那做不到我們該怎麼辦
就意味著其實我們要做的事情
要達到這樣的一個結果
我們需要做更多更多的事情
來幫助我們的這個
所謂的這種智能體的這樣的一個應用
能夠達到這樣的一個狀態
那這樣的一個狀態
我們從右邊來看
就是從上面
第一從輸入的這個角度
對於用戶來講
用戶依然需要的是簡單一點
我不需要去想那麼多
但是實際上我們要讓他
能夠很好的進行工作
至少在當前的這個技術的一個狀態下面
我們還沒有辦法做到
很快速的完整的一個理解
其實我們右上角那個
所謂的簡單輸入
一般我們還有個通俗的話
就是老闆需求
這個可能在這個企業工作裡面
大家都會有一個感覺
就是老闆需求通常就是這樣的
就是比較模糊
然後覺得你應該懂
我給你一個方向
然後我對你的期望就是
既然都跟你說了
你為什麼不把這個結果給我拿到
而實際上我們要拿到結果的時候
我們會發現真正要做的事情
是右下角這邊很重要的這一些事情
其實都要表達
包括我們要做更精準的指令控制
我們要讓他具備
更加豐富準確的知識儲備
我們還要讓他有更真實的擬人化表現
還有上下輪管理機制
還有複雜的這種處理流程的一個控制
而這些其實都是我們真正在解決
這樣的一個簡單輸入老闆需求的背後
需要去做的事情
所以這裡面
我們需要在大模型的能力之上
去做一些事情
才能夠真正的達到這樣的一個狀態
這裡面有一個很有意思的
這樣的一個眼鏡順序
其實這個並不是我說的
這個正好我前幾天在這個
百毒肥獎的另外一個會上
然後這個BV的這個副總
這個溫永騰溫總
其實就提過這樣一個點
說模型的能力的一個整個升級
其實從Prompt到這個IG到Agent
有這樣的一個眼睛的一個路徑
那為什麼會有這樣的一個狀態呢
我自己也嘗試做了一個解讀
因為本來這個PPT後面
還解釋了Prompt的工作原理
和IG的工作原理
但是後來我想了一想
就是Prompt這個事兒交給江叔來講
可能會更合適
待會他可以會講更多這個
更細的東西
IG這個呢
更多的其實我們贊種
也是比較豐富的這個經驗
大家有興趣大家可以跟他交流
那我這邊可能會跟大家側重講
這個Agent能幹嘛
但是先總結一下
就這三個關鍵眼睛路徑
到底分別在解決什麼樣的一個問題
我們先從Prompt開始
Prompt這個事情就是提示詞
這個事情它其實有一個
很關鍵的一個作用
我們知道剛才我們看到這個
模型的一個技術的一個方案上
他在做一個很關鍵的事情
就是根據我們用戶給定的一個輸入
其實是在預測一個最可能的
一個輸出的一個結果
而這樣的一個預測
如果你沒有給它足夠的信息
會造成一個什麼樣的一個現象呢
就是它的這個結果
可能是發現可能會不準確
那還有一種可能它會產生幻覺
那Prompt它能夠提供比較明確的背景信息
能夠提供明確的行動風格指導
能夠提供明確的這樣的一個輸出目標
還有執行過程
還能夠補充一些額外的信息
從Prompt的工程裡面
其實後來在這個學術界
還提出了一個比較關鍵的一個認知
就是我們的模型
其實是具有一個能力叫做in-context learning
也就是說在上下文提供的信息中間持續學習
而不是在這個
因為我們通常來講的話
我們剛才講預訓練模型
預訓練模型有一個比較大的特點是什麼
就是我已經預訓練好了
我的狀態其實是不變更的
也就意味著你下一次再問我同樣的問題
哪怕你之前跟我講過
只要我不告訴你
我沒告訴你過之前你的這個結論
或者說我們討論的這樣的一個記錄
我還是不知道
但是in-context learning能夠做一件什麼事
就是我告訴你
他就有可能知道
他就有可能在這樣的一個信息裡面找到一個
他應該瞭解或者學會的這樣的一個信息
然後把它結合到自己的後續生成裡面
這個是in-context learning
一個比較重要的一個事情
所以我們再回頭來講
所以Prompt它關鍵提供了一個什麼事呢
就是幫助我們模型的這種發現式的生成進行聚焦
所以我們通過Prompt的工程
它一個最重要的作用
就是幫助我們獲得更優質的
或者說它的這個方向性更明確的一個結論
而通過提示詞告訴我們的模型
你應該朝哪些關鍵的方向去進行更可靠的生成
而IG就在in-context learning這件事情上面
然後做了進一步的一個演進
因為我們知道就是模型我們在使用的時候
剛才有一個很關鍵的一個問題就是你老會騙我
這個問題是大家會經常遇到的
這個在我們的這個術語上面叫做幻覺
那幻覺這件事情它有可能是怎麼產生的呢
這個當然學界還沒有給出完全的一個結論
但它有一個很關鍵的一個可能是什麼產生的
就是當你給出一個非常強硬的一個指令
或者說一個這個生成的一個方向
但實際上它的這個知識儲備
裡面並沒有帶有對應的這樣的一個信息的時候
為了完成這個任務
它會想辦法去生成一個相對可信的一個結果
而這個相對可信的一個結果
其實它並沒有這個知識儲備
也就意味著它就是錯的
而IG在這個事情上面它就通過動態的一個方式
它在這個promote的基礎之上去做的這個工作
它通過動態的信息補充的一個方式
能夠把更準確的信息提供給我們的模型
也就是說在生成這個結果的時候
實際上它在拿到了這個信息
除了我們的問題之外
還有我們的IG這一套系統
在外部給它提供的更完整的這樣的一個知識
然後通過這個知識加上它的這個生成能力
和理解的這個學習理解的能力結合起來
得到了一個更完整的一個生成
但是我們再去談agent的時候
實際上我們會發現它跟左邊這兩個
好像還不在一個層面
因為左邊這兩件事情上面
我們通常討論的時候
我們會發現我們會有一個很大的一個前提
我們把整個場景會限定在對話問答
這樣的一些場景裏面
而到了右邊agent的時候
我們會發現我們對它的訴求
可能不能僅限於對話和問答
我們可能要想更多的事情
我們希望我們的語言模型能夠幫助我們
在生產過程裏面去進行一些行動規劃
去使用一些工具
跟我們的環境去進行交互
在我們的生產系統裏面產生真正的連接關係
這個也是剛才兩種講的一個很好的一個例子
就是兩種其實剛才有提到一個點說
看起來新勢力在玩新勢力的事
然後傳統的舊勢力
大家在做軟件的時候
好像自己有很多自有的一個入口
其實是分開的 是割裂的
agent這件事情其實在很大的一個程度上面
就在想說我們怎麼樣
能夠讓我們的這個模型的能力
進入到這樣的一個系統裏面去
去跟它產生
因為agent有一個很關鍵的使命
或者說它的一個關鍵的作用
是它要有行動能力
它要對外界能夠感知
而且還能夠反饋
也就意味著它其實有一些觸點
去跟外界去進行交互
同時agent它也擁有
它自己獨立的一個信息結構
為什麼要用獨立的信息結構呢
因為我們知道了
就是我們在做這個模型本身的時候
它其實如果我們要去請求模型
我們如果不按這個對話去做這個分的話
其實所有的這樣的一個信息
其實雜誘在一起
上下文管理其實一個相對來說
比較簡單粗暴的一個方案
但如果我們要想說讓多個agent之間
要去形成一些這個工作的話
每個agent其實需要擁有
自己的一套上下文
擁有自己的一套信息
然後這一套信息其實也需要被獨立管理
大家稍等一下
對翻個頁
沒事那我接著往下講
然後接下來呢我們就在想說
為什麼我們會提出agent這樣的一個概念
其實agent這個概念啊在
大部分人可能有感知的是
六月份的時候有一篇
關鍵的一個研究人報告
是openAI的一個研究人報告
關鍵的一個研究人報告
所以agent的一個研究人報告
我們就在想說
為什麼我們會提出agent這樣的一個概念
其實agent這個概念啊在
大部分人可能有感知的是
一個研究人報告
是openAI的這個研究人Lilian Wong
提出來的這個agent的一個結構
但實際上在這個結構出現之前
還有一個很關鍵的一個事情
而這個事情呢其實當時openAI
應該是Altman或者是Elias
我忘了他們兩個的誰
在推特上面其實發過一個推特
專門去講了一件講了一個
給了一個非常高的一個評價
說這個東西的出現
是prime time training
里程碑式的一個進步
那這裡我就解讀一下為什麼它是啊
首先這個東西是什麼
它是Auto GPT
這個東西是在去年的4月份的時候
發布到線上
然後當然大家
我相信大家可能就是
有很多開發者或者是跑來前面的人
當時就試過這個東西
大家當時試過以後
可能也會有一個感覺說
那個東西可能就是個玩具啊
就是它其實並不能很好的
解決任何這個時機的問題
但是我們要去通過那個現象
我們要去看背後的一個
很關鍵的一個點 是什麼呢
就是Auto GPT其實它在這個時點
就是去年的4月份這樣的一個時點
幫助我們很多的這個模型使用者
做出了一個很關鍵的思想上的轉變
我們在去年4月份之前
可能很多的這個使用者
我們對於模型的使用
甚至我們對於API的調用
其實還是停留在這種問答
或者對話這樣的一個角度
去進行的一個思考
但實際上Auto GPT當時做了一個
非常關鍵的一個動作
它把模型身份
從左邊的這個Executor
變成了一個Planar
也就是說Auto GPT
它在使用模型的時候
它大量的使用
是用在右邊這樣的一個場景
它希望模型是一個
具有決策能力的思考者
它的主要工作
是根據用戶給定的目標
去制定一個行動計劃
然後分析這個行動執行過程
中間的一些結果反饋
然後再進行行動修正
本質上面是一個控制中心
而不是一個執行中心
執行工作
尤其是需要一些確定性
執行工作的一個結果
Auto GPT當時是
直接提出了工具的概念
它直接使用到了這個代碼生成
和一些就是你的
本地電腦上的一個計算
也就意味著在這個時候
我們大部分人還在認為說
我對於模型提出要求
要求模型去給我一個結果的時候
Auto GPT說我不要
我讓模型只用幫我去想
為什麼要去做這件事
我該怎麼做
要真正要做的時候
我讓一個確定性更高的工具去做
我用瀏覽的工具去獲取
真正的網頁上面的
瀏覽出來的信息
我用計算器去算
真正的這樣的一個
要去計算的一個結果
這些不一定讓模型做
這個Executor裡面可以有模型也可以沒有
因為它在Auto GPT當時的
這個結構設計裡面
它有一個叫做
小的agent的這樣的一個結構
它自己沒把自己叫agent當時
它有一個小的agent結構
一些小的agent
去做這個Executor的這樣的一個角色
但是它的一個核心的這樣的一個思考流程
都在右邊的這個藍色的planar上
這樣的一個思考轉變
會帶來什麼樣的一個現象呢
我動不了了
它其實會帶來一個很關鍵的一個現象
就是我們對於模型能力的評價
或者說我們真正在
模型可以在我們的應用場景裡面
該怎麼去使用的時候的一些
思考的這樣的一個標準
也會發生變化
當然這個變化我現在還沒有看到
可能相對來說比較完善的一個評估體系
但是我們可以看我們的評估的
這樣的一個方向和思路
其實會發生一些變化
在Executor這樣的一個狀態下面
我們其實更多的在評估的是什麼
是模型的一些認知能力
語言能力
然後自然語言的這種處理任務的一個準確性
但是到了planar這邊
我們要去想的是
它能不能理解我的目標到底是什麼
它能不能根據這樣的一個理解
給出更合理的這樣的一個解法規劃
它能不能處理好我給它提供的這些信息
它在過程中間它會不會失焦
就比如說我做著做著
我就不記得我的目標是什麼
或者我陷到某個子目標裡面去了
然後我能不能對一些異常的
這樣的一個處理結果去進行修正
還有我能不能正確的選擇工具和使用工具
我們會發現在這樣的一個新的使用方法下面
我們對於模型能力的一個需要發生了變化
而這個變化其實起點我們往前去看的話
有很大的一個程度上面其實是AutoGBT帶來的
但接下來我們就來到了6月份
6月份的時候OpenAI的這個研究員李展翁
就給出了一個他們在內部
去對這個agent的一個結構的一個思考
給出了一個更完整的一個結構
那麼一個agent它應該具有記憶
而且是有長期和短期記憶
不像我們剛才簡單講的
我們就是一個消息列的不斷的一個推出
還有長期的這樣的一個需要總結
或者是需要一些整理的一些關鍵記憶
這是一個管理系統記憶的管理系統
然後同時需要具有planning的能力
剛才我們在講這個AutoGBT的時候有在解釋的
就是planning的能力其實對於agent來講已經非常重要
同時它要有這樣的一個工具的承接
和使用這個工具行動向的一個任務
但這個就是在Linux的一個基礎之上
就是我們agent裡的這樣的一個框架團隊
在思考的就是一個agent
可能會需要去具備的這樣的一些能力
這裡面當然是包括了模型的一個能力
這個還是跟剛才那個圖有一點點不太一樣的
首先因為我們知道agent的背後
我們不可以繞開的一個話題就是
它還是依賴於模型驅動的
並不是說我們agent是一個很獨立的東西
我們跟模型沒有什麼關係
我們其實依賴於模型驅動的
但是我們對於模型驅動的要求
就像我剛才講這個AutoGBT的要求是不一樣的
就是驅動agent的
關注的是它的plan的一個能力
關注的是它的一個這個Tool調用的一個能力
它的這樣的一個Tool理解的一個
就工具理解的這樣的一些能力
然後在整個這個圖的一個左邊呢
我們可以看到它要具有這樣的一個觀察的一個能力
具有這個知識的一個補足的能力和工具使用
然後右邊呢
它要具有這個角色管理狀態管理
和這個記憶管理的一個能力
而且底下我們也知道就是agent本身
它也不是一個簡單的一個就是問答機器人
也就不是說我簡單的給你一個問題
然後它馬上要去進行一個快速的一個回答
而中間它可能會需要經過
更複雜的思考過程的一個架構
和工作流程的一個管控
而這個整體是我們所謂的一個agent
這裡面我們可以看到它有一些特點
就第一個模型
模型它不是綁定在某一家模型身上的
它應該是根據這個需要
我們在這個特定場景裡面去使用
不同的一個模型去驅動這個agent的
而同時我們看到這樣一個圈
說明這個agent本身它是一個
相對獨立的一個結構體
而這個結構體與另外一個圈之間
還可以形成互動
它們之間還可以交互
也就是說兩個agent之間或者多個agent之間
它還可以形成互動和交互
而我們知道模型在這個圈裡面
我們是劃在這個圈內的
也就意味著其實對於不同的agent來講
我們可以使用不同的模型去進行驅動
我們可以在業務場景裡面
構建更複雜的這樣的一個模型
使用和調度的一個鏈路
當然這些是我們整體的一個
現在可看的一個結構
這裡底下有一個銀行小字
叫做kipak upgrading
為什麼這麼說呢
就是我們知道agent這樣的一個概念
其實也就才出現了不到一年的一個時間
按照剛才的這個線率下來
其實如果按照autogpt算是一個
啟發者然後OpenAI給出了一個
初步定義的這樣的一個邏輯來看
它出現最早也就是去年的4月份
但這裡面我談的agent指的是
語言模型power的agent
跟我們之前在深度學習裡面去談論的
另外一種agent是沒有關係的
我們在談論的這種語言模型驅動的agent
其實它出現還不到一年
也就意味著其實這樣的一個結構
或者說這樣的一個能力項
還遠遠沒有到達它的一個穩固態和中態
還有很多很多其他的這個可能性
在裡面是可能出現的
就隨便舉個例子
比如說多摩泰它一旦出現了之後
是不是有一種可能性是我們在這裡面的
一些這個observe的這個能力
會得到進一步的一個升級
然後我們在輸出的時候
還用文本的方式進行輸出嗎
還是我們可以去用其他的一個方式進行輸出
這些其實都是我們在多摩泰一旦來臨了之後
我們要去想的下一步的一個問題
但是不重要就是我們先要去討論的是
我們整個這樣的一個結構
所以我們如果要去做agent這樣的一個事情的時候
至少對於我們是在做一個agent開發框架的
這樣的一個團隊我們就要去思考
我們能不能為我們的開發者提供一個
既能夠支撐這樣的一系列
複雜的這樣的一個結構
同時還具備它的持續可估量性的這樣的一個可能
同時我們還要求這個框架
它能夠解決剛才那個問題
就是我們要不能割裂的去
讓新勢力成為新勢力獨立發展
我們還要能夠跟我們的傳統的這樣的一個軟件
或者是傳統的這樣的一個互聯網服務能夠結合起來
這些問題其實同時都需要被解決
這裡我們先看一個這個agent的任務
這個任務輸入比較簡單就是說
用戶丟出了一個網址
然後說你能不能告訴我一下這個頁面說了什麼
其實一個典型的agent的任務
它不是一個直接輸出的這樣的一個過程
我們會看到這個過程裡面會經過agent會自己思考說
我看到了這個信息
這個信息裡面我能力缺陷
我的能力缺陷是我不能瀏覽網頁
我自己不能瀏覽網頁
所以我不知道這個網頁的內容
但是我可以使用Bros這個工具
所以我要調用一下它
然後所以它進行了一個行動說
我要把這個瀏覽這個工具給用一下
按照這個工具要使用的話
我就需要按照這個工具去對它進行調用
它會去做一件事情就是把網址提供給這個工具
因為這個工具它需要一個輸入
你得告訴我你到底讓我查什麼
它調用完畢了之後
拿到了一個工具返回的一個結果
這個時候我先說好我知道了
原來這個網頁它長那個樣子
然後再去給出一個回复
我根據網頁的內容
給出整個這個信息整理的一個回复
它是這樣的一個過程
那整個這樣的一個過程
在我們的框架裡面
在應用開發的時候
它就比較簡單了
沒有那麼複雜
就是因為我們其實在這個框架上面
會對它進行一些封裝
我們這個應用表格我們就可以看到
就比較簡單
我們就把這個包引進來
然後呢創建一個agent
然後創建的agent告訴他說
你要去用瀏覽器這個工具
然後接下來給他這一句話的一個輸入
我們就在底下看到這樣一個輸出
這個輸出跟剛才我們看的那個頁面的
這個內容是一樣的
而且我們用了英文輸出
所以它把中文的頁面瀏覽完了以後
用英文的方式對它進行了一個輸出
我們也可以看到這個輸出
上面講的就是關於這個旅行包的
一個相關的一些這個信息的一個整理
這個其實就是一個我們框架
在如何完成剛才agent這樣的一個
內容任務的時候的一個簡單的一個演示
大家可以注意到說這個框架
其實它就是一個Python的一個代碼
這個代碼是可以放在你的這個軟件開發的
服務的任何一段的這樣的一個服務塊裡面
好 這是一個影子
我們接下來來講說agent裡
到底它還帶來了什麼
首先我們需要在討論這樣的一個問題之前
我們要先明確agent裡它是一個開發框架
開發框架可能關心的問題
跟我們有一些這個做應用的
這樣的一個視角關心的問題可能還不太一樣
因為我們在上面看到就是像這種
應用型的一個產品我們更多的關心什麼
關心一些面向問題的一個解決的一個結果
所以會要求說我們的用戶使用要簡單一點
要更面向場景一點
要高度豐張一點
就是最好是面向問題的解決
但如果我們要去討論這個開發框架
其實我們的開發工程師會更關心另外一些問題
比如說你的框架的一個架構
它是不是清晰的
你的核心流程是不是合理的
潰染性是不是足夠強
就剛才我們講的我給你提供了這樣的一個agent的
一個這個概念結構圖
但是等到我用這個框架的時候我發現
我要去改這個角色模塊
它會一下子就影響整個agent的全部的工作流程
那這個沒法改了
就是比如說我想定一個更好的一個角色管理的
這樣的一個方案
但是我發現我一用完了以後記憶管理被我給搞壞了
或者是工具雕用被我搞壞了
這樣的一個流程是不行的
所以呢對於我們的這個框架來講
我們還要求的是架構清晰的情況下
我們還要流程可以定制
而且它的潰染信號比較強
互相之間還不要影響我們壞是可以更換的
這些其實都是我們在為開發者去提供服務的時候
要去討論的一些更重要的一些課題
那我們的整個這個架構是這樣的一個架構
就是我們其實分成了三層
我們是一個核潛草
這個核潛草我們定義了agent的單
我們也定義了這個一個agent
單個agent的它的運行時
裡面到底有哪些關鍵的一個數據
它其實不僅僅是上下文數據
還有很多其他的運行數據
我們的框架也會為它提供管理
然後同時我們還提供了
面向結構化數據的標準I/O表達
這個也是一個其實很有意思的一個事情
因為我跟一些開發者交流的時候特別有意思
標準的這個I/O表達
其實說的直白一點
就是你可以把這個結構化的
比如說一個數組或者一個字典
直接傳給我們的agent
你不需要去做結構化變更
然後你也可以直接傳一個這個字典
然後裡面再放一堆的變量
標準化的輸出是指的說
我輸出的時候也按照你的要求
你給我一個
你要求它生成一個字典的這樣一個要求
我就直接給你生成一個字典給你
而不是我給你生成一段自然語言文本
然後讓你去想說
我還要怎麼去把它再翻譯成一個字典
這個對於工程師來講
其實非常重要的一件事
但是我跟很多工程師交流的時候
有一個非常有意思的現象
工程師不好意思問
我發現了一個特別有意思的這個點就是
很多工程師說對
這個東西其實我可以用JSON生成來解決這個問題
但是我在用的時候我發現
模型的JSON生成好像很難控制
但是我非常不好意思問這件事
如果我一旦問出來了
好像就顯得我在這個工程專業技術上面
不是特別過關
導致大家不敢問
那就不要問了
我們框架幫你解決這個問題就好了
別問了
對
但實際上大家就是作為開發者也放心
這個問題其實並不是一個你個人遇到的問題
我們所有的在做這個大型語言模型
把它加入到這個工程化開發的這個過程裡面
我們都會遭遇到這樣的一個問題
但這個問題是一個很重要的問題
所以它在我們的這個核心基礎邏輯層
然後在這個基礎邏輯層之上呢
我們為這個agent的這個運行本身呢
又提供了可定制的這種插件層
這裡面包括我們通過模型插件
基於底下的這個核心運行流那個流程邏輯
允許我們的這個開發者
去更換自己想要使用的一個模型
我們的框架默認已經適配了一些模型
而通過同樣的方法你還可以去適配更多的模型
然後第二個呢
我們為這個agent的行為提供增強的這樣的一個插件
那這個增強的一個過程呢
主要是發生在我們對一次這個agent請求的前和後
通常我們會需要對它進行一些這個
信息的一個規則和處理
比如說prompt的工程其實就是一個非常典型的一個
要去做信息處理的一個例子
而我們真正在我們的一個應用開發的過程裡面
其實可能有一些開發者會有比較大的一個感觸
我們的prompt所需要的信息並不是在用戶的輸入裡面一次性獲得的
我們很有可能是從很多不同的業務系統模塊裡面拿到的
每個系統模塊給我一個碎塊
最後要把它整理起來
這樣的一個整理呢
通過我們的行為增強的這樣的一個插件呢
是能夠幫你更好的去完成這樣的一個信息匯總
然後第三個就是存儲管理的這樣的一個插件
可以幫助我們的這個開發者去管理
自己所需要去進行這樣的一個信息持久化
數據固化了這樣的一個能力
然後再往上其實是應用擴展
那應用擴展我們剛才也說了嘛
就是一個agent他要去使用的工具
他肯定不能僅限於你框架給我提供了剛開始那幾套
就是可能其實大部分的這個應用開發者不會滿意
所以呢我們在應用擴展程提供了
自定義這樣的一個工具的這樣一個能力
包括我們可能很多的開發者會關心
比較簡單的一個命題你的這個模型怎麼使用方向calling
實際上通過這樣的一個插件是同時可以幫你完成的
而且這個你不用侷限於gpt
基本上我們測試下來的話
像國內的像文心的這樣的一個模型
也是可以完成這樣的一個工作的
min max也可以
那還有一塊呢是這個業務數據的一個管理
那這個管理就包括我們剛才在講的
就是我們在整個業務的這個使用過程裡面
像角色和狀態的一些管理
也是需要通過這樣的一個插件去做的
那還有一個比較重要的就是協作山河
因為我們也在提嘛就是你agent是有這個單agent
還有這個多個agent之間的這樣的一個協作
那我們通過協作山河這樣的一個插件
能幫助我們的這個agent
能夠在這個更高的一個這樣山河的一個層面上
一個環境裡面去完成進一步的一個協作
那得到的一個結構就是在上面
我們可以看到它的一個使用效果
就包括我們的這個業務表達的一個清晰簡單
對模型依賴的一個結構
包括我們的結構化數據的I/O通訊
然後包括我們的這個高困難性和高自由度
那這個呢其實就是一個很典型的一個例子
使用我們的這個框架去進行開發的時候
做了一個比較典型的一個例子
說一下這個例子的一個場景
它場景是這樣的就是
我們可能有一些這種就是
少兒陪伴的一些客戶
他們呢會需要去使用一個這樣的一個模型之上
構建一個agent去幫助他的這個產品
跟這個小孩去進行交互
而這裡面他遇到了一個問題
這個問題是什麼呢
這個小孩呢
他受到我們這個網絡流行文化的一個影響
他有可能會說出一些這種非常流行的一些流行梗
而這個流行梗
我們如果使用reg的這樣的一個方式去更新的時候
很有可能遇到一個問題
是我們的這個知識更新的一個不及時
所以他希望呢
更直接的去使用搜索了這樣的一個能力
去尋找到這樣的一個網絡
而在這樣的一個大的一個場景下面
其實這一段的代碼非常短
但實際上它體現了我們的框架
比較有不同的一個能力
今天能看到就最上面這一段的這個配置
體現了我們框架
其實可以配置不同的這樣的一個模型
包括GbGt
包括Google Gemini
然後包括文心
但至於多說一句
Google Gemini在去年的年底發布呢
對於我們來講
其實是一個非常有利
或者說對我們來講是非常好的一件事情
因為現在是免費的
而我們框架也第一時間對這個事情
進行了一個配置和適配
那做了這件事情了之後呢
它能帶來的一個好處呢
它並不是說我們在商用上面
能夠有獲得特別大的一個好處
而說我們在試驗的這樣的一個成本上面
會急劇的一個下降
而使用我們的框架結合像GbGt這樣的一些免費的模型呢
我們可以更快的去把我們的想法先驗證出來
而驗證完畢了之後
可能會使用到像文心這樣的一些
在國內相對來說合規
而且可商用的這樣的一些模型
去完成它的進一步的一個商業化
它可以分成兩個部分來做
然後第二點就是我們可以看到
這個底下的角色控制這一塊呢
我們進行了這個一些角色的一個設置
當然它是比較簡單的一個設置
然後再往下呢
我們通過這個同樣的這個角色設置裡面
去進行規則的一個設定呢
去控制了我們整個這個Agent的一個思考
和這個工作的一個路徑
因為我們會看到這裡面
其實是有一個分支選擇的
就是我們的孩子有可能是在問一些知識性問題
也有可能是在找你閒聊
那麼他是需要進行判斷
給出不一樣的這樣的一個行為恢復的一個狀態
那搜索是我們已經打開的這樣的一個工具
可以看到就在這短短的這幾行的這個代碼裡面
我們就看到了整個這個Agent結構
能夠在我們的代碼裡面
用一個高度的這種就是簡易的這種表達方式
來完成這樣的一次表達
但這個是我們剛才講的就是對於這個工具的
一個註冊的一個事例的一個代碼也非常簡單
就是我們大家自己有一個這個工具
我們想要怎麼去對它進行註冊
我們就只要通過一行的一個指令
這上面也是一個非常簡單的演示
就是獲取當前時間的一個工具
我們給它進行一次註冊
那麼我們的Agent就獲得了這樣的一個
知道當前時間的這樣一個能力
我們在底下這個數字可以看到
就是我們問它現在幾點了
它能給出一個相對準確的一個時間的一個回答
當然就是還有我們對於這個工具
也會提供另外一種這個就是使用的一個方式
這個方式是你把這個工具註冊給它
那這個Agent成為了方身科技的一個執行器
而這個執行器它還會額外幫你做別的事情
就當你告訴它我已經提供了主機性和不主量性
這也是我們廣場上面
我們工程化的這個工作者
能夠做一個比較重要的一個試程
因為我們知道就是
如果我們用戶得到了一個不主量的
給予一個不主量的信息
它會出現一個什麼樣的一個現象
就是如果我們的文件強行去調的話
它會出現壞處
所以我們通過Masked Call這樣的一個設置
我們能夠讓我們的Agent去幫你識別
用戶的輸入的信息是否齊備
一旦齊備的話它就會去執行
如果不齊備它會給你一個我要問問題的建議
就會告訴你說我發現這裡有個信息不足的
你可以用這個問題嘗試返回給你的用戶
讓你的用戶提供更完整的這樣的一個信息不足
然後右下角這個也是一個
我們框架的一個特點
這個我們框架特點是什麼呢
就是其實這是我們一個合作的
一個項目的一個團隊
它會有更多的新的這樣的一個工具
和對於工具調用的
邏輯的一個自行能想定義的一個事情
而我們的框架提供了這樣的一個文件加結構
這樣的一個文件加結構
去允許我們的開發者對任何其中的一個模塊
比如說我看到Agent Component
裡面的這個Tool這個文件
它是可以自己重寫的
它覺得我們現在的文件裡面
給它提供的這個邏輯是不清晰
或者是它不太滿意的
它可以重寫一遍
而重寫這個Tool的這個調用的邏輯
是不會跟我們的比如說角色管理
或者是我們的這個繪畫管理
這樣的一些邏輯衝突的
我們所有的這樣的一個Agent Component
這樣的一層插件
它都是邏輯相對來說平行的
而底下這個Tool文件加裡面
它又想更新一些新的這樣的一個Tool的工具
它也可以在這樣的一個文件加裡面去進行補足
這個都是我們框架可以提供的一些特性
我們也支持自主規劃了
這個Agent之間的一個寫作
這個也是一個例子就不細講了
這個例子它是一個用戶
它會去扮演員工或者是老闆
然後它要先去跟第一個門控的
這樣的一個就是說路由的這樣的一個Agent
去進行一個溝通去表達自己的一個需要
而這個Agent它會去根據自己
看到的這樣的一個角色身份的這樣的一個用戶
它到底應該去找哪個Agent
去解決它的問題去進行一次路由
而做完這一次路由了之後
真正接待老闆是另外一個Agent
在這裡面我們可以看到就是老闆問了兩種問題
那麼我們看到用戶得到了這個路由的
這樣的一個Agent的一個首次回覆了之後
接下來會被路由到另外一個Agent身上
然後這個Agent會真正的對老闆的問題進行解答
然後我們整個這樣的一個框架
因為我們其實是做一個
偏底層的這樣的一個開發框架
所以我們其實也要給我們開發者提供很多
這樣的一個具體的一個支持
所以我們也會持續更新我們的案例庫
這裡面大家看到的截圖就是我們當前已經有的
各種各樣不同的案例
其實它的這個內容還比較豐富
包括這個Decorator
包括這種怎麼去根據一張圖去生成一段廣告語
包括怎麼去做一個問卷調查機器人
去幫你回收用戶的這樣的
比如說用餐的這種滿意度信息
這些都可以掃我們屏幕的右下方的那個二維碼
就會進到我們的這個線上的一個地址
這個地址裡面就可以看到這個相應的文檔
每一個文檔點進去
每個鏈接點進去都是一個Collabor文件
也就是說我們的開發者如果想要去嘗試的話
直接打開Collabor文件
就可以在線上用這個Google提供的這個
線上的運行環境直接去嘗試
因為我們不需要使用算力
我們大部分的這些
在線上不需要使用的這樣的一個機器人
從最基本的指令到怎麼去做這個協同
怎麼去做這個語句生成
Text to SQL這樣的一個都會有
大家有興趣的可以掃碼
然後去訪問這樣的一個界面
或者先把它存下來
當然也是因為我們是個開源項目
也希望大家就是如果覺得這個項目不錯的話
幫我們點個信
我們剛才看到這些案例
它都是發生在代碼運行時的
代碼運行時其實還會帶來一個很關鍵的變化
這個變化是什麼我們來看一下
代碼運行時如果使用到語言模型
而且是我們還帶有Agent結構的語言模型
我們發現我們的一些
傳統的軟件工程的實現方案裡
又有新的可能性
它的可能性是什麼呢
就我們看傳統的軟件工程
我們會做這樣的一個事情去解決問題
我們需要決定一個問題
要求解決這個解法
我們要實現整個這個解決的過程
然後我們才能獲得一個確定性的結果
但是在剛才我們看到這樣的一個Agent的能力
被放到代碼的行級別去使用的時候
我們看到可能是我們在代碼運行時
有可能做到成熟的問題
然後等到運作完畢之後
獲取Agent的結果
這個表現是什麼樣的呢
我們來看
這是一個實際的案例
待會我們就直接可以看到
這個實際案例的代碼運行時
到底運行出來的結果
我們可以通過變量傳知的方式
然後通過Aput這樣一個指令告訴它
我希望你輸出的結構格式
我們就可以得到結構化的結果
這是第一種
真的又更新了另外一種能力
我們通過Decorator的方式
也可以做同樣的事情
而Decorator是怎麼做的呢
我們代碼變成習慣的方式去定義一個函數
這個函數但你不用它寫
你不需要把裡面的內容寫出來
你只能告訴它說
我認為這裡面有幾個參數
我希望你輸出長什麼樣子
我通過這個代碼的注釋
對於這個函數的注釋告訴它
我認為這段代碼在幹嘛
然後接下來你把你認為要處理
這段代碼任務的Agent召喚出來
在上面你創建一個
然後你還可以給它追加額外的信息
你可以追加它額外的查件
你可以更改任何東西
更改完了之後
直接把它作為一個Decorator
放在它的這個函數上面
而實際上還有一個很關鍵的點
這個Agent出現了之後
它並不是幫你寫這段代碼
它是在理解你這一段函數
你到底希望它在做什麼
它直接把結果給你返回了
它並不會去真正的幫你寫一段
這個sql生成的代碼
因為我們做
如果有做數據平台的朋友
可能都知道
這個東西如果真要寫出來的話
我們十年都沒有解決的問題
它也不可能說
我拿一段確定性的代碼來幫你解決
所以呢
這其實是另外一種表達方式
跟我們下面的一種表達方式相比
但是它是更符合
我們軟件工程的一個
思維習慣的另外一種表達方式
也會出現
我們定義了一個模糊的任務
也沒有實現裡面的任何東西
但是我們可以得到對應的結果
我們接下來再看這個
具體的一個代碼的一個樣
這個效果的一個樣例
這個就是我們主要去測試的
這樣的一個結果的一些表現數據
然後我們要問的問題
接下來我們來看這個視頻
大家如果對這個視頻的
這個效果感興趣的
就是覺得說這是個路品
我自己想再試一試
看它的這個效果
是不是真的如這個路品一樣
那麼可靠
或者說那麼
覺得它的這個準確度比較高
可以直接找那邊的那個二維碼
那個二維碼就是
我們的一個collabor的寫上來
你可以用你自己的方式去測
那個數量的一個問題
而且比我們剛才看到的
你看一下它給你的這個輸出的結果
是不是如你所想
當然我們在這樣的一個處理過程裡面
是什麼呢
就是我們剛才的這個
它是整個代碼段中的一部分
所以呢我們最後生成的一個結果呢
是思維的一個過程和它的這個
到這個數據庫裡面執行
但是我們通過這個代碼
主要演示的一個點就是
我們可以在運行時
通過這樣的一個輸入獲得一個
這個輸出
是直接傳遞給我們的數據庫的
OK那我們可以看到
現在已經第一個問題的結果已經出來了
第一個問題比較簡單
它其實是一個單表查詢的一個問題
因為我們只需要去查定單表
就能夠得到比較簡單的這樣的一個
結果的一個回復
那在這裡面呢
我們更多可能就是看一下它會不會使用這個
Distinct來去判斷這種用戶的一個取寵問題
它是一個比較簡單的一個問題
而第二個問題相對來說更加複雜
這裡面其實有好幾個陷阱
第一個我們可以看一下
這裡面的一個第一個陷阱是什麼呢
問題
它其實這個看似是一個問題
但實際上它在問的是兩個問題
買了多少件商品和花了多少錢是兩個問題
這兩個問題意味著我們在查詢的時候
其實是需要使用兩個結果
來呈現我們的這樣的一個查詢字段
然後第二個tricky的地方在哪呢
第二個比較tricky的地方在於
我們的表裡面其實沒有給它定單總金額
我們只給了這個商品的單價
和定單上面所購買的商品的價格
商品的數量
也就意味著其實如果它輸出正確的一個結果
我們需要在它結果裡面看到它有一個場地
它需要把這個單價和這個
所購買的定單量要乘起來
才能看到這樣的一個結果
然後當然第三個是這是一個聯表查詢
因為我們不能通過任何一個單表
獲得這樣的一個信息
用戶的信息在用戶表上
定單信息在定單表裡
這兩個信息需要做聯表
我們也看到它做了聯表
但第四個是表原數據裡面
其實是有給出一些映射關係
比如說女性用戶需要使用的
這個gender的這個值是female
查到這樣的一個mampinist
所有的這些點
在我們的這次直銜裡面都看到
它都被處理掉
這個對於我們text2這個seq來講
其實是非常重要的
就是它能夠把這裡面很多的
就是跟表的這個信息
關聯的這個關鍵的這個信息
能夠找到而且能夠生成
好 剛才就是講完了我們整個這個大的一個
我們框架的一些能力
還有包括它可能我們會認為
它給這個我們的開發
帶來了一些變化
之後我們來做一些
更大層面上的一些討論
就是一些變和不變的事
莫總那個時間會比較那個什麼
我們加快一些
一些結果
好
對 這也是最後一part了
我們快一點
就變與不變
第一個點呢
可能大家看到這麼多的
這樣的一個案例的時候
我想法說會不會把程序給替代了
這個是一個可能我們之前去宣講的時候
經常遇到一個問題
我的觀點是不是的
在這樣的一個階段來講
它並不是一個replace的一個關係
實際上是一個combine的一個關係
也就是說它是個融合關係
就我們剛才看到的這樣的一個新的這種開發
開發的一個範例
它其實跟我們的這種傳統開發方式
是結合的關係
我們應該在我們傳動的這樣的一個
開發的這個過程裡面
在某些我們需要去進行這個
處理的這樣的一個環節裡面
去用這個AI的能力對它進行替換
而不是說就有這樣的一個
直接的完整替代的一個關係
我們會看到傳統的軟件開發在左邊
它是一個命題清晰
然後這個明確
然後邊界清晰
然後實現要比較健壯的
但是如果我們把這樣的一個新的這種範例
給放到了我們的這個軟件工程
這樣的一個過程裡面
我們就需要去接受我們在整個這個軟件裡面
可能會有一些地方
它是只有fantasy主題
邊界問題還不窮盡
只描述了主要處理流程
還要容忍這種概率性錯誤的
這個當然對於我們軟件工程來講
會變成一個新的一個挑戰
但是我們已經看到了就是
這樣的一個技術一旦發生
這樣的一個向前的一個變革的一個過程
是很難去要求它倒退的
所以我們要去思考的更多是
我們看到了這樣一個現象
我們只要有這樣的一些特徵
我們該怎麼去應對和處理
還有第二個問題就是
我們的這個推進的節奏
因為我們也會看到現在市面上有一些這個
想要去討論的解決方案是
嘗試解決剛才我們提出的這個老闆問題
而要解決這種老闆問題的時候呢
它的對於能力的要求其實是比較高的
在這裡面我們就嘗試去給出一個
對於這個智能體的能力成長上面
可能它的一個關鍵的維度
和這樣的一個眼睛拆解來看這個問題
因為我們知道要解決問題其實從左邊看
解決問題是要經過分支法
我們要有一個大的一個問題
讓我們要把它去分成若干個小問題
然後我們再去嘗試對它進行處理
而當前階段按照剛才的那樣的一個
翻試討論上面來講
我們並不是說agent能全部處理到所有的問題
那裡面就會涉及到人類和agent的一個協同問題
就是我們人類的代碼
代碼和這個agent的這樣的一個
直接的一個處理結果是要結合的
那從右邊來看的話呢
基於這樣的一個左邊的問題解決模型
我們就會把它分成智能體對於問題理解的能力
解法規劃的能力
智能體處理的能力和協作的能力
而我們知道如果要解決老闆問題
通常大部分情況下這些能力
都要達到右邊的L3級別
而現在我們在看的大部分情況
我們的智能體可能才在L1的階段
那其實整個這個過程還是認中道遠的
那要達到這樣的一個階段
包括我們模型能力的不斷提升
其實也包括我們剛才提出的像agent裡提供的
這樣的一個框架裡面的很多組件的能力
也是需要不斷提升的
比如說我們有沒有更好的記憶管理方案
我們有更優的這樣的一個規劃的這樣的一個決策邏輯
我們有沒有更好的這樣的一個工具調用的一個邏輯
這其實都是一些挑戰
然後對人其實也有這個變化
那對人的一個要求從模型出現了
或者說大型語言模型這樣的一個技術突破了之後
一個最明顯的變化是我們的行動門檻降低了
我們很多的這個原來可能需要經過非常專業的
這個潛質的這種領域學習的這樣一些事情
我們可以把門檻降下來
我們的操作的難度降下來
我們嘗試驗證的成本降下來
但是有一些東西是不變的
就是我們的判斷或者說審美
所以我們在對結果做得好不好的評價的能力
其實是不變的
還是需要有專業的人來進行評價
來進行學習
對於過程合理性的這個評價能力現在也是不變的
至少這個是一個短期的
這個並不是說我們說十年之後還是這樣
但是至少我們在這個兩到三年
這個事情是不會變的
然後協助鏈條也在發生變化
協助鏈條原來
就是我們在這個去年可以看到一個非常有意思的現象
就是我們的業務和算法兩側的這樣的一個同學
非常的興奮很熱
但是有一批人其實沒有那麼熱
這個可能跟大家的這個理解還不太一樣
就是我們有一批在做工程的這樣的一個角色
他們其實還沒有完全衝進來
包括我們在國內看到的一些現象
包括我們在這個海外看到一些現象
有很多的這個大量的工程開發
尤其是後端開發
其實大家對於這個模型應用的這個
還是持這種就是保留態度會偏多
這個當然跟我們的這個傳統軟件工程的一些思想
有一些關係
就是我們要求建裝性我們要求這個穩定
但實際上我們會發現這樣的一個協助鏈條
它出現了一些變化
就因為工程在這一塊上面的投入度可能沒有那麼高
然後導致什麼呢
我們想跑得快樂
業務和算法兩端會嘗試用一些方案
在擠壓中間的這樣的一個過程
比如說拿算法舉例子
算法通過Prompt Engineering的一個方式
他們在嘗試把一些工程的活給做了
我把更複雜的這樣的一個處理邏輯幫你實現了
我直接做一個服務趕緊上線
然後跟前端工程師趕緊合作一下
我把這個界面就趕緊跑了
盡量的先繞開後端的這樣的一個
也比較容易
就可能更長的這樣的一個流程
而右端
右端通過我們看到的像GPS
通過看到了我們的這個Prompt的這樣的一個
提示詞的這樣的一個工程
去用無代碼的一個方式
嘗試更加詳細的表達它的業務的理解
它不像以前我只能寫個PRID
我只能畫個流程圖
我只能放你它大概長這樣子
我沒法驗證
我也沒法拿一個真實的用戶的一個案例來告你
說我這樣處理可能是對的
但是現在它有了一個工具
它拿到了這樣的一個東西
它可以告訴大家說
OK我做了個GPS
你看那個用戶輸入進來了以後
我這樣幫他處理
這個用戶對這個輸出是滿意的
但是使用我們框架
你還可以使用到更簡單的這種
像Python一些表達來表達更複雜的這樣的一個邏輯
所以在這樣的一個情況下面
兩頭都嘗試擠壓中間的這樣的一個角色
但是我們也知道
就是我們要做更複雜的工程的時候
中間這個角色是不可或缺的
我這裡面只是說提出這樣的一個狀態
希望呼籲我們的工程人員
也要重視這個事情
不要再停留太遠
這個過程現在是可以容忍的
但是如果一直停留下來的話
很容易在這個事情上面會受到擠壓的
然後最後還有一個形態上的一個變化
我們知道說大型語言模型
其實它的訓練是非常依賴語料的
但是我們有一種新型的語料
它在去年之前是沒有出現的
去年之前我們看到大部分語料都是什麼
什麼書籍類語料文本類語料
然後這個解釋一些這個東西是什麼
說明性的文字
但實際上我們真正把語言模型
投入到我們應用的時候
我們還會產生另外一套語料
就是我們在解決的問題過程中間
我們到底是怎麼按順序給出命題
給出解法
然後哪一個解決的問題是好的
哪個解決問題是不好的
而這些東西是大型語言模型
沒有進入到實際應用生產的過程裡面
沒有進入到我們實際場景裡面
它壓根就沒有產生的語料
因為這東西之前不存在
而去年開始它存在了
所以也就是說這一類的這個數據
這一類的語料
是在去年才出現的新型的一個語料
好 最後做一個呼籲總結
就是剛才講的這些點
就是大概的一個歸納觀點
就是說我們可以看到
未來其實已經離我們很近了
但是現在上車還不晚
尤其是剛才我在呼籲的
藍色的部分的同學
也是我們的主要的一個服務對象
現在上車還不晚
我們可以給你提供最容易上手的
這種AI時代的應用開發框架
然後同時我們還有這種社區貢獻支持
我們有工作坊支持
我們有開發者的一個知識生態保障
我們其實現在也已經跟一些企業
在做這種企業內部的合作
就包括剛才我們提到的
有沒有可能讓我們業務人員跑得更快
然後更直接的把自己業務的知識儲備
所見所得通過一些
AI模型的一個方式去進行表達
然後給我們的開發策
能夠更直觀的看到
我希望的業務流程是什麼樣的
這些都是我們框架可以去為大家
去提供這樣的一個支撐
當然我們也為了一些
直接落地的這樣一個應用
因為當然詹總其實也說得對
國企其實跑得會比較快
有一些在嘗試落地的這樣的一些企業
也提供更深度的這樣一個合作
這個服務
然後最後還是回過頭
雖然有那些服務
我們依然關鍵的是一個開源項目
所以也是希望大家能夠
給我們的開源項目
如果覺得好的話
給我們點個心
然後多多使用我們的框架
非常感謝
謝謝莫欣總的介紹
莫欣總我剛才有一個觀點的話
我承認可
就是現在的工程
就是再句話一點
就是工程研發人員必須得靠往兩端靠
不能的話你完全的就是沉溺
還沉溺在原先的思路裏面
這個是必須要做的
我們下面的話有請這個秦總
他是畢勝的作者
畢勝的話是一個可視化的
構建大模型應用的一個框架
他們的話也有很多行業的落地經驗
像在銀行證券很多行業
有實操的落地經驗的
秦總的話在很多方面
這方面經驗是非常深的
他今天給大家帶來
就是從技能到夥伴
從實驗到實彈的一些
具體的落地的一些方法
我請稍微講一下
就是活生命發掘的發行人
用了他的名字
我們也是希望說
他讓智慧普遍大眾
我們也希望讓這個
智能的能力能夠普遍大眾
然後今天應該在場
也有一些我們的開發者
跟我們的客戶
剛才也在微信上聯繫我
對就是我們
一會兒也可以先下載去交流
就是我們呢
其實應該是9月初開源
然後到我現在
也收到非常多的
客戶的使用跟支持
後面會有一些案例
是我們來自我們客戶的
一些使用場景
然後我們今天講這個主題
從技能到夥伴
這裡的技能指的是
我們對於大模型當前
這個階段能夠給我們帶來的
比較具體的實在的價值的
一個定義
他可能現在做不到AGI
做不到一個我們所謂
非常全面的Agent這個能力
我們認為他會解決
幫我解決某一個問題
他是擅長的
這個東西我們把定義
為一個技能
那我們首先這個部分
會去分享一些
我們做了一些這種技能
或在企業裡的那些場景
其實就是代表著
我們未來對於這個
應用形態的一個認識
我們希望它不一定是一個技能
或是一個很全面的
要以實驗態的為主
然後探索的為主
很多的這個業務場
你都想跑過來試一下
再探索一下
會是這樣的感覺
那麼我們看到了很多
它可以去進一步產生更大價值
看到的價值
想要去更大規模使用的
這麼一個趨勢
我們明年可能解決的問題
就是如何從實驗到生產
去解決剛才墨星總統的
這些工程化的問題
這個就是整個今天
大概想介紹的主要內容
然後第一個部分呢
是技能
就剛才提到的
我們對於一種應用場景
實際的這種應用場景
因為我們其實
這個整個地區的團隊
是一個比較接地氣
比較實在的一個團隊
然後我們這邊更多可以談一些
比較具象的一些事情
一個是像這種
比如說給一個集團的公司
這個財務製度的問題
打擊這個人
他是說我集團有100多家公司
那種城市
但忘記我的住宿標準
我的這個人的這個人員
不一樣我到底能報多少錢
這件事情
員工是不會記這個事情的
但是我要去報銷
我要去報一個財務人員
然後他又找了兩回大量的問題
那所以像這樣的事情
才是一個非常好的呢
其實不同的員工
這裡其實可以用模型來判斷
你這個你想問的事情
不是這個
這個員工的身份
我直接就能面對到你是那個公司
或者是
或者是
我們這個財務的問題
然後我們就是
不同意圖的這個
分別去做到什麼流程去解決
然後我們就是
不同意圖的這個
分別去做到什麼流程去解決
然後我們就是
不同意圖的這個
分別去做到什麼流程去解決
然後我們就是
不同意圖的這個
分別去做到什麼流程去解決
然後我們就是
不同意圖的這個
分別去做到什麼流程去解決
然後我們就是
不同意圖的這個
分別去做到什麼流程去解決
然後我們就是
不同意圖的這個
分別去做到什麼流程去解決
然後我們就是
不同意圖的這個
分別去做到什麼流程去解決
然後我們就是
不同意圖的這個
分別去做到什麼流程去解決
然後我們就是
不同意圖的這個
分別去做到什麼流程去解決
然後我們就是
不同意圖的這個
分別去做到什麼流程去解決
然後我們就是
不同意圖的這個
分別去做到什麼流程去解決
然後我們就是
不同意圖的這個
分別去做到什麼流程去解決
然後我們就是
不同意圖的這個
分別去做到什麼流程去解決
然後我們就是
不同意圖的這個
分別去做到什麼流程去解決
然後我們就是
不同意圖的這個
分別去做到什麼流程去解決
然後我們就是
不同意圖的這個
分別去做到什麼流程去解決
然後我們就是
不同意圖的這個
分別去做到什麼流程去解決
然後我們就是
不同意圖的這個
分別去做到什麼流程去解決
然後我們就是
不同意圖的這個
分別去做到什麼流程去解決
然後我們就是
不同意圖的這個
分別去做到什麼流程去解決
然後我們就是
不同意圖的這個
分別去做到什麼流程去解決
然後我們就是
不同意圖的這個
分別去做到什麼流程去解決
然後我們就是
不同意圖的這個
分別去做到什麼流程去解決
然後我們就是
不同意圖的這個
分別去做到什麼流程去解決
然後我們就是
不同意圖的這個
分別去做到什麼流程去解決
然後我們就是
不同意圖的這個
分別去做到什麼流程去解決
然後我們就是
不同意圖的這個
分別去做到什麼流程去解決
然後我們就是
不同意圖的這個
分別去做到什麼流程去解決
然後我們就是
不同意圖的這個
分別去做到什麼流程去解決
然後我們就是
不同意圖的這個
分別去做到什麼流程去解決
然後我們就是
不同意圖的這個
分別去做到什麼流程去解決
然後我們就是
不同意圖的這個
分別去做到什麼流程去解決
然後我們就是
不同意圖的這個
分別去做到什麼流程去解決
然後我們就是
不同意圖的這個
分別去做到什麼流程去解決
然後我們就是
不同意圖的這個
分別去做到什麼流程去解決
然後我們就是
不同意圖的這個
分別去做到什麼流程去解決
然後我們就是
不同意圖的這個
分別去做到什麼流程去解決
然後我們就是
不同意圖的這個
分別去做到什麼流程去解決
然後我們就是
不同意圖的這個
分別去做到什麼流程去解決
然後我們就是
不同意圖的這個
分別去做到什麼流程去解決
然後我們就是
不同意圖的這個
分別去做到什麼流程去解決
然後我們就是
不同意圖的這個
分別去做到什麼流程去解決
然後我們就是
不同意圖的這個
分別去做到什麼流程去解決
然後我們就是
不同意圖的這個
分別去做到什麼流程去解決
然後我們就是
不同意圖的這個
分別去做到什麼流程去解決
然後我們就是
不同意圖的這個
分別去做到什麼流程去解決
然後我們就是
不同意圖的這個
分別去做到什麼流程去解決
然後我們就是
不同意圖的這個
分別去做到什麼流程去解決
然後我們就是
不同意圖的這個
分別去做到什麼流程去解決
然後我們就是
不同意圖的這個
分別去做到什麼流程去解決
然後我們就是
不同意圖的這個
分別去做到什麼流程去解決
然後我們就是
不同意圖的這個
分別去做到什麼流程去解決
然後我們就是
不同意圖的這個
分別去做到什麼流程去解決
然後我們就是
不同意圖的這個
分別去做到什麼流程去解決
然後我們就是
不同意圖的這個
分別去做到什麼流程去解決
然後我們就是
不同意圖的這個
分別去做到什麼流程去解決
然後我們就是
不同意圖的這個
分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後我們就分別去做到什麼流程去解決
然後最後一個話題就是從實驗到生產
然後最後一個話題就是從實驗到生產
這個定位比較簡單
就是更多去講一個我們大概的一個框架
就是更多去講一個我們大概的一個框架
我們目前其實主要在左邊
我們目前其實主要在左邊
我們自己定義自己為一個實驗框架
當然它底層會有一些我們的通用服務
當然它底層會有一些我們的通用服務
然後現在我們其實就已經發現問題了
我們拿著這條實驗框架
去克服的生產系統去上線
解決壓力
所以我們從價格上來講
我們會推出整個上線框架
我們會推出整個上線框架
包括整個更垂直的垂直AP
包括整個更垂直的垂直AP
因為這個整個實驗框架插孔
因為這個整個實驗框架插孔
目標是否比較靈活
目標是否比較靈活
我比較可視化我能夠給拖拉蓋
我能夠去快速的去克服
它又不符合我們生產上的一些訴求了
所以我們會叫做首先B5C2AED
所以我們會叫做首先B5C2AED
我通過在實驗環境下探索
我大概摸清楚了
這個流程大概是很大件的
相當於其實我就
我覺得這個地方可能更合
去降低我們原本去做
企業的一些IT介紹的時候
很多的溝通的
很多的溝通的
雙方信息同步
有問題的一些情況
業務腦子裡想的東西
跟我實際開發理論不一樣
我開發出來的不理解過
但是這個體驗引發的選擇
我們通過實驗框架來的
我可以快速地去驗證這個想法
然後把這個
整個大邏輯和穿通
整個最終的業務體驗都已經符合
業務預期了我們覺得這個東西
它在生產上非常大的
併發的壓力或處理量的壓力
我們就需要去專門
去設計的AED
我們可能把這邊的一個實驗框架
這個大邏輯在我們的生產環境下
重寫一遍
其實就是重寫一遍
我們又不用浪費到東西去跑
浪費的東西就是比較實驗性的東西
那麼這個地方
它就是一個比較
但是它比較通用的部分
就是我們體驗的通用服務
它不需要這種靈活拖拉這個部分
是可以通用的
然後除了這個
我直接把這個做完重寫以外
這個是比較重的
另外比較輕量的它是一種小程序
我們左邊這個實驗框架
它為了靈活
它有很多的魚
我們再給它提供個上限程序
我左邊導出的
實驗的技能我直接導出一個文件
在生產環境下直接一鍵上線
因為這個場域
它就這樣不會審查
不需要有這麼高的高可用
高併發的導賬的話
我就可以通過這樣的方式去做上限
這個是大概我們的一個思路
然後最綽綽的
我們再介紹一下
我們是一款開源的
大模型的經濟開發框架
從企業的角度
然後左邊
是大概一個炸彈圖
從底層我們去跑開源模型
去做模型的S&T
包括推移加速
包括我們資源那些這種組織內的
這種非極化的處理跟解析
的這個地點模型
然後到中間層
其實它最主要就是Longchain那一層
所以我們在Longchain基本上就做了很多的優化
包括國內生態的適配動
國內各大模型廠商
包括國內的一些
這種數據源的接入
以及這裡剛才介紹到的非極化處理
這個事情我稍微多說一嘴
就是它對這樣
對最終效果影響非常大
就是我簡單舉個例子
我一份文大
和跨頁的
我不做處理
其實一頁把它拼在一起
還是提了蠻多數據
這個就是所謂的數據的預覆
我們在這邊要借助相應的
模型跟能力來把這個數據
預覆好然後建築到我們的
資源庫裡去
然後等等我就不再
追溯了包括這裡的一些Agent
的這個框架
包括多智能體
輝瑞的合作鑑識能力
都集中到這個中間的實驗框架上
讓大家可以快速地去鑑證
然後上面的通用應用層
叫做我們看到的所有的剛才
這些企業類的場景
大家抽象的其實
不會是那麼幾大類的那我們可以把它
先做一個通用的封裝
如果有人對這個UI沒有
特別聽說的需求
那其實直接拿來用
我先做一個驗證給他OK了
我們再去做一些客製化的
面向這個最終業務用戶的一些友好的
提升了一些技術化
就是這個通用應用層
因為我們畢竟是開業的
直接拿過去部署
然後我們更多
我們公司提供的是
去做一方面
維保咱們這個如果生產方向
給你這個生產的穩定性
是很好的
另外一個就是我們整個落地過程當中的
資訊因為每個行業
每個企業的情況都不一樣
我們會去做這一層的
落地資訊跟實施的服務
包括我們也歡迎更多的這個
生產的夥伴
將這些人跟我們一起來做這些事情
並且我們其實
有很多的這個合作夥伴
客戶問我們就是看誰我們要一起協力
做的比較全面的比較滿佔
你們真的開了
就很多人問我這個問題
然後說你這個是不是
割韭菜開了一段時間以後就閉了
這個人問我這個問題
然後首先我們現在正在
做就是我們正在
建一個這個非營利組織
把這個畢生放到那邊去
跟我們這個公司這邊割韭菜
我們就做發熱商通過的一件事情
那個畢生就屬於那個
非營利的非營利的營業性組織
然後也讓大家更加放心的參與到
這個進行公正展開
然後
因為我們覺得我應該看的比較清楚
這個事這個市場
這個市場不見得給大家看到市場
這個市場太大了
我們一下子走不過來
我們就是其實需要
做一點事情
所以說我們其實是一個比較開放的態度來看這件事情
然後這邊是一個那個
然後我們也在我們的其實在
我們的整個在線銀行
體系裡邊包括有很多人開過
我們門板也說你們寫的
比較良心吧
基本上能看的開放出來的東西都會
開放出來給大家看
然後
這邊是我們目前
一些比較大的客戶可能應該
也還是別的客戶很雷烈的包含
我可能有些客戶不知道
那我就把一些比較大的列在這邊
然後包括我們的一些這個合作夥伴
包括我們一些使用
這些學校的一些
實驗室和科研科研的機構
從體檢來講大概是這樣的一個情況
然後這也是我們的一個開發者
一個微信群
去增加我們的一些地址
好大概是
這點謝謝
好的謝謝
秦總的一個介紹
因為必須用的話應該做很多
開發者應該用的也比較多
大家那個有興趣可以加入
那個社區這個包括
剛才莫總他們那個agent
的秦總的這個
必須用大家可以點個贊
在那個star上可以點個star
OK我們下面的話就
有請拉馬中文社區的
聯合發起人
群東齊曲總
他也是這個就是
他還有很多title我就不一一介紹
比如說那個他今天會帶來
拉馬中文社區
以及這個開人大腦起物
來展望的一個主持人獎
因為剛才李總介紹的不遠
下面有請這個曲總給大家
介紹開人獎謝謝
謝謝贊總
在分享之前看大家要不要休息
一下去上個洗手間
給大家兩分鐘或五分鐘時間
大家休息一下
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
(音量不足)
拜拜
你不想跟他一起去吗?
