LineChain来了
我们以前知道LineChain的话
对于构建知识库的话
是非常好的一个解决方案
能够解决一些个智能克服的场景
那么今天我们要介绍的Agent的话
要Agent-lay的话
是Agent界的LineChain
它基于它的话能快速构建企业的
这个AI agent
来替代相关的岗位
从而实现企业的完全进入AI时代
那么今天我们要介绍这个项目
叫Agent-lay
也是我一好朋友叫莫辛总
他做的一个开案项目
然后这个项目的话就是
它的话我们可以基于它来构建
企业相关工作流的这个像
思维术或者说SOT思维框架
都可以放在这个工作流里面
从而实现这个企业的Agent
比如说像销售Agent
或者说这个研发Agent
或者其他的Agent
那么的话
就是说对于销售Agent的话
我们可以把销售的这个TOT思维术
或者思维股价
通过这个Agent-lay
这个整个提供的相关接口来构建
那么我们下面的话
来介绍一下这个项目
首先的话
这个项目的话
就是说安装是非常简单的
就采用这个Paper install
Agent-lay
就是如果Python的话就执行这个
如果你不是Python的话
那么的话你就可以执行这个
然后就如果是它提供两个版本
一个是Python版本
一个是Node.js版本
那么如果你要运行Node.js版本
首先要安装
就是NPM把这个安装之后的话
那你就可以运行它的
Json的这个版本了
Json版本运行就用Node.js
然后就是采用这种方式
很简单
我给大家看一眼
就采用这种方式
就是特别简单的一种方式
Node.js
然后后面跟上Js文件
就可以运行了
如果你是Python的话
我们一会再说Python
首先给大家讲一下这个项目
然后这个项目可以做什么呢
就是说我认为
它是能够快速帮我们构建一个Agent
然后这个是最小的一个实例
比如说你可能通过这个
这块Create Worker
然后这块指定它的Model
它目前支持三个类型的模型
两个模型
一个JPT
然后还有一个minimax
后面会支持星火和百度温馨一眼
那么的话现在支持这个的话
你这里就相当于
如果JPT的话
这里配JPT
如果是minimax
这里就配成minimax
然后后面有API
你需要把你的API
在这里配置一下就OK了
所以这个的话
是逻辑其实很简单
这块的话设置大模型的名字
然后这块设置大模型的类型
和它的API
如果是minimax
就把这个地方换成minimax
然后后面再跟一个你的SDK就行了
就API也可以就可以了
然后这块的话就是Rezar
它的逻辑也很简单
这块构建了一个Worker
就Agent的Create Worker
相当于创建一个工作流工作Worker
然后创建工作Worker之后的话
然后用Worker input
然后就说你把你的需要
这块可以变量
比如X
你可以需要把你的外部的输入
你问的问题放在这里
那么output的话可以输出
比如说输出这个words
然后输出sentence
因为我们这里让它输出
这个5个单词和一个句子
那么的话就你这个一指行的话
它会运行出这个对应的结果
当然的话我也给大家提供了一个
范例比如说前面的话
get in clone笔记
然后再配备install
然后这块的话你再运行它
就跟那个前面这个
这是Python代码
你看我这里运行出结果了对吧
然后第二个部分的话
这是第一个势力
然后第二个势力的话
它比较牛逼
就前面我刚刚给大家也说了
它支持这个多种模型
生成不同的agent
就相当于说
我们只需要在这个地方
就是也就是上面
上面这个地方点set
就点set设置大模型
设置你名字的话你自定义
但后面这个set element also
这里的话需要
用对应的这个模型名
就说白了就是说
比如像这里
我们相当于不用使用它
来进行对应的健全信息
你相当于就是把这里要换
这个地方前面这个
比如说gpt
那么的话你如果用它的话
你就把它换成minimax
什么意思呢
我们就可以把这里换成minimax
这个也换成minimax
然后后面跟上minimax的
max它的一个APRK
那么这个的话
我们在运行它的时候
也能运行出对应结果
相当于掉了minimax
未来它会支持
像讯飞文信言这些
然后的话
我觉得它比较有意思的
还有一个很重要的一个例子
就是说第二个
我给大家就是放的第二个例子
就它可以直接
这个agent是可以掉外部工具
那怎么掉呢
比如前面有个工具包tose
然后后面的话
紧接着这里有个工具的
一个tose的一个函数
那么的话这个函数的话
就是说具体中间这个
我就这个的话
大家也可以自己看一下
其实就是说逻辑其实很简单
最后的大概就是说
你用cow透
用这个定义的这个函数
然后后面跟一个
你需要让它干的事情
比如说这里说是
让它浏览这个redim这个文件
然后来做一些分割
并且看一下北京的这个
未来24小时的一个天气
那么的话前面有一个
我们可以看它这有input
walk这里相当的固定了一个walk
然后前面有这个tose的名字
还有各种tose
然后再有这个相当就是说
它把这个前面我们定义的
这个tose这个工具的
这个函数的这个工具箱
然后相当在这里的话
做了一个定义
定义完之后的话
就在walk里面可以引用这个工具
当你问一个问题的时候
那么的话就是说它会
我们执行一下看一下效果
就是说当你问一个
具体的问题的时候的话
首先就会输出调用了什么函数
然后因为我这里做了一个
就做了一个定义
让它输出这个函数
你看这里就是我让它输出了
output这个函数
所以它这个时候
它会告诉我用了这两个工具
然后的话紧接的话
就是它说
前面我让它干的第一件事
它完成了
然后还有第二件事
北京的天气怎么
它说未来三个小时后会下雨
然后这个的话它有一个说明
然后这个引用
其实最大的一个用处
就是说我们都知道
OpenR有个函数调用
那么它的话也是一样
类似于函数调用一样
比如说你本地有一个
举个例子
比如说我们要调用本地的
这个API
那么的话你又可以定义在这里
就定一个函数
然后来调你未来本地的
这个API的相关函数
或者调你本地的各种的
这个比如说给你原先ERP系统
OA系统关联起来
比如说我有一个定票的一个函数
OK 我就把这个关联起来就好了
比如说我有一个
这个公司的一个打印的一个函数
我就放在这
或者我有一个其他的
比如查询这个客户信息的
或者是OA系统上某项功能的函数
那我就会放到这工艺箱里面
当我自然语言告诉他的时候
他就可以去调用这些个相关的工具
然后给我调用相关工具
然后来这个什么
给出我对应的结果
这个的话就是属于函数调用这块的
然后就是说下一步的话什么呢
下一步是到这个
下一个模块是叫角色扮演
角色扮演这个来说的话
我们可以看一下
当然这块也是做一些配置
构建这个Agent Lake
构建完之后的话
然后你这里相当
角色这个他这个也比较简单
然后你使用角色
打开现在处
然后在设置相关的
设置这个角色
比如名字
然后还有什么
这个人的一个个性
聊天风格
然后愿望
然后这个可以增加一些补充之类的
这个你都可以设置
然后记得这个地方
一定要把UZI使用状态打开
然后再设置一个使用状态
比如你可以设置一些模式
然后我们运行他的话
我们可以看到
比如说我这里希望他能更多的了解他
然后让他帮我讲个故事
讲一下关于他的一个故事
那么他就帮我讲出来
这个的话是适用于很多
角色扮演的场景
比如说你可以在这里
比如说作为销售
你可以说明一下销售的一个情况
这个销售的一个个人的一个特性
或者说像这种个性化的这种
比如说比如说我要弄一个马斯克的
那么我名字用马斯克
然后他的性格
我这里引入一下
然后他的聊天风格
或者说我甚至可以引入他的这个
其他一些等等一些聊天数据
我这里都可以做补充
把他的这个人的历史
比如说像他的在这个推特上发言
各种的话我都调进来
然后让他让这个角色更丰富一些
未来我跟他聊天
他就能根据
就相当于我就像就在caricature上
跟这个马斯克聊天是一样的
所以他能实现这个功能
然后我们再往下
就是说这是关于这个角色扮演这一块
就相当于你可以打造实力人设
属性记忆的话
把它打造成你想要的样子
这相当于我们可以对他去进行
相关的一个人物设定和状态管理
那么的话下面的话
就是说它是一个上下文记忆的问题
上下文记忆它还提供一个例子
当然我这里的话就是说也帮大家
就是说相当把这个例子放在了
你有兴趣的可以自己运行一下
这个我就不细说了
相当增加一个上下文
让他有一个上下文的一个记忆
其实就是说最早介绍那个walker
第一个例子walker这个里面
它是没有上下文的
单一walker它是一个没有上下文的一个
没有上下文的意思
但到这个地方相当增加了记忆
相当有上下文了
OK然后我们再看下一个例子
这个相当于也是帮他启动
这个上下文管理能力好吧
然后我觉得这个地方还是蛮重要的
因为我们其实在日常中
去定义我的agent的过程中的话
其实需要就根据我的业务来定义
我的工作流和工作节点的
那么这个的话它相当于就是说
帮我们提供了一种方式
能够去自定义我的工作流
在什么节点干什么事情
就是我可以编排我的agent
这里相当提供了一个例子
这属于自定义也就通过
这个我定义了一个蓝图
然后这个蓝图的话就是说
里面有相关的一些处理的一些节点
和一些个相关的工作流控制
那么的话我们相当在这个里面
可以定义多个这个函数
也可以定义一个
你如果定义多个函数
相当于有多个的一个工作流
这么一个过程
这个函数里面主要定义的是工作流
大概这个意思
然后这工作流定义完之后的话
然后你可以就是说把它
处理函数注册的这个蓝图里面
然后再做这个重新编排这个工作流
那么的话就是后面有这个
像上下文管理
然后生成这个题词
然后还有后面这个
关于这个请求消息的一个处理
然后还有这个就是这个retrace
就是说相当于工作流节点的一个导入
然后我们看他就说这个运行完之后
这个结果这块有个运行结果
当然我在那边也可以大家看一眼
比如我的笔记里面给大家放了
这个的话就刚才前面说
那个上下文那个例子
上下文例子也一样的
比如他说这个我让他提醒我的
买多了个鸡蛋
你比如说我这个上下文
我第一句话这个
然后第二句话这个
然后第三句第四句对吧
然后我让他
这是多人对话的一种对话方式
然后这块的话就是使用
这个工作流的方式
工作流方式相当于他
按照我的工作人员的要求
给我做对应的输出
这个的话就说我觉得这个部分
尤其是最后一个部分
应该说工作流自定义编排这块是
对于大多数公司来说非常需要的
因为我们一般公司业务场景不一样
所以设置的这个工作流的
agent也是不一样的
他最我觉得这个项目
比较厉害的地方是在于
就是说我们可以在agent的实力里面
把这个思维数TOT和SOT给加进去
因为我们都知道
大模型里面有很重要的一个能力
推理能力
这个推理能力其实体现在TOT这种方面
TOT SOT这种技术上
那么的话我们可以通过外部的
一个方式把大模型
原先在这TOT思维数和这个思维
框架方面不足的方面
通过agent给他补足
这也就是我们通常说的agent
本质是对原先大模型能力的
他的一个原先他的这个
就是推理能力的一个提升
这是特定场景的推理能力的提升
那么这个的话
这个功能的话应该对于我们构建
这个企业的替代人的agent的方面
是非常有帮助的
然后相当于我们可以在这里的话
重新定义我公司的这个工作流
然后从来的话就是我在做
这个相关的工作流编排
然后后面的话再进入个聊天
这个东西好处在哪呢
好处又在于未来我可以把我的前端的
这个相当就是说你的工作流
这个部分做一个模块
让一个团队来开发
然后对于外部跟客户那边的一个
相当于沟通的那块的一个agent的一个
就是相当那块就不用动了
它相当于有个架构思维在里面
就是把工作流部分拆出来了
只需要比如一个团队里面
可能一部分人专门去研究
这个工作流给它改进
还有一部分的话就专门去做这个
工作相关的walker
就是这个agent实力的调用就好了
所以这个是非常有意思的
比较适合于我们在开发过程中
多人写作的一个场景
而不需要说是像我们以前做agent的话
就是说相当于你整个的代码流程
是完全是都在一起的
一个地方改了可能所有地方都要改
这个的话相当于把这个框架思维
相当于把它给剥离开了
形成了一个就是说大家各自干各自的事情
调用agent的人专门干调用的事情
然后就是说做工作流改进的
专门做工作流去改进
然后还有些其他的等等
相当于这个的话是比较适用的ok
然后而且的话他们是支持多个
相当于多个工作节点来进行调用的
那么这个就非常有意思
有使用工作节点和工作流
这个概念
这里的话相当定义像这个
定义新的模型的工作节点的处理函数
然后可以定义多个
然后就从来放在工作流里面进行多次处理
ok这是关于它的几个实例的一个介绍
我觉得这个项目的话就是说
给我带了比较大的一个冲击
就是它能快速的帮我们去建立
一个agent的一个当前
在我看到的很多框架里面
应该是非常好的一个框架
而且的话就使用起来也非常简单
还有一个比较好的一点
比如说像我们一般做agent的时候
你第一要选择模型对吧
它也支持多个模型
然后这是第一点好处
第二点好处的话就是说
它在像角色设定
还有工作流管理上下文记忆
工作流管理
其实就是说我们一般做agent
有几个方面像这个角色
这个题词方面的
然后还有这个就是记忆上下文
然后以及工作流SOT相关的一个编排
这三个方面的话
在agent框架里面已经体现得非常好了
所以我相信这个项目的话
未来大家基于它再去开发agent
会省去很多的工作好吧
然后这个笔记的话
就是我这个也做一些整理
如果你要运行node的话
就用js来运行
因为在agent它自己的这个里面
提供两个demo
一个是python的一个nodejs
如果运行nodejs的话
你第一步要安装一下
安装的方法
就第一步要运行一下这个
npm这个要把它运行一下
然后运行完之后的话
你再去调运它就好了
比如说我这个应用运行过了
所以我这里就不再运行了
然后相当于你再去运行它
它就直接执行了
我看一下这个需要再安装一下
然后就是说这个里面
这个代码仓库里面的话
就相当于它有两个
然后这个安装完了
我们再运行它
再运行它就比较简单了
看一下再运行一下它
然后它就对应的处理结果
我们看一下这个.c这个demo
因为它的话就没有开启
这个我给大家就是随便的
就是你在运行的记住
你需要把这个地方
需要给它开一下
什么意思
你要run的话
需要把这个开一下
我给大家说一下
比如说像这个例子
这是最后一个demo
这个demo的话
就是相当于通过这个运行的话
基本上这个就已经
相当于运行出结果了对吧
然后就说我给大家看一下代码
当我们运行的时候
我记得因为它整个都配置的话
这些都ok的
然后你运行js的话
你首先需要把这里
换成你的sdk换一下
然后如果这第一个demo
第一个demo的话
你运行的时候需要把这个地方
就把它给前面两个需要拿掉
拿到最后
然后才能开始运行
第二个demo也是一样的
如果你不允许运行
第一个把它注视掉
然后运行第二个的话
也是一样的
就是说把这个要拆掉
不然的话你运行没有结果
这个地方
我觉得给大家说一下
注意事项
然后python里面也是一样的
python这个逻辑也是一样的
就是说你把对应的做一下配置
配置完之后的话
如果你要运行的话
需要把前面这些个
就是说它有一些个注视掉的
给它拿掉
这样才能运行起来
不然它run不起来
我觉得这个地方给大家稍微注意一下
你别想这个地方
你run的话你就把它注视掉
不然的话就不输出结果
好吧
然后因为它官方做的好多事例
在一个文件里面没有拆开
所以我们在运行的时候
要注意一下这个地方
ok
这就是我们今天要介绍的
agent类这个项目
希望对大家有所帮助
然后最后的话就是
大家如果需要这个笔记的话
可以在我的
就是相当于这个评论区
可以在这个什么动态那里的话
可以去获取
或者说直接来找我就私信我来获取
好吧
我们今天的介绍就到这里
