聊一个叫agents的这个项目
我们都知道之前聊过很多agents相关的项目
比如像meta jpt
cells jpt
还有其他的像chaddav等很多的agents
那么当我们在用那些agents来说的话
都是非常惊艳的
那么我们自己如何构建一个像meta jpt
一样或者说像cells jpt一样
或者像chaddav一样的一个agents呢
其实现在市面上的话
截止目前agents是我看到的第一个
能够帮大家不需要写代码
能快速的构建各种的agents
比如说meta jpt cells jpt
你通过这个agents的话就能快速构建
是不是很兴奋啊
因为它里面就是说它的原理是基于sop
一个工作流的sop再结合大模型
可以构建不管是单体的agents
还是多体agents都是可以实现的
然后可以实现像这个销售的agents
还有研发的agents以及电商的agents等等
各种方面的agents
那么我们今天来快速看一下这个项目
首先的话这个地方有个图
这是这个项目的一个架构
就是说你在里面可以构建多种agents
这里的话它外部有web-nation
还有planning还有计划
再有工具使用
然后还有play然后web这个
然后多个agents之间可以随便在交互
然后同时还可以通过一个sop
来控制多个agents之间的一个动作
然后并且还可以跟web的这个
人的这个agents的话再进行一个接入
这个就非常有意思了
OK我们下面来看一下这个项目
在开始之前我先给大家看一下
这是我在本地构建的一个电商的
这是一个电商的就是一个agents
就说白了
你可以跟他聊这个电商的agents是直接
这个项目如果你是电商的话
你用它是直接可以来构建电商的agents
比如说我其实问他了
他说欢迎来的店里有什么要买的吗
我就问他店里有什么东西
然后他说123欢迎光临等等
然后我说我想看衣服
他说他有衣服还有电子商品对吧
我说我想看衣服
然后他说有很多样式
他底下给我推荐了几个衣服
然后底下
然后我说我要看这个品牌的英外衣服
那么他就给我推荐了这个品牌
对应的这个英外衣服给我推荐了一些
然后他还就是说白了
跟我进行一个深入的探讨
所以就比如说我再问他一个
我想买个玩具
我想买个电子产品吧
比如说我想买个电子产品
我们看一下他的回复
就是在开始这个讲他之前
我们先体验一下他
这是一个销售的agents
然后他说好的
你要是想购买的话
这里有不同的电子设备
然后123他给我推荐了很多对吧
我们看到了
然后其实通过这些链接的话
都是能够访问的能看到的
然后因为我为了防止不是广告嫌疑
我就补那个什么了
然后就是说他这里他说
你想购买这个什么123
他提供了很多推荐
经过搜索他筛出了这些
然后你有兴趣可以点过去再看对吧
这就是一个很有意思的
其实在电商场景里面经常会
遇到的一些个
就是就让遇到一些场景
也会直接用起来一个场景对吧
ok 这是关于这个
就是这个agents的一个简单的演示
我们下面来看一下这个项目
这个项目真的是
我觉得还是蛮震撼的
对我来说我觉得蛮震撼的
因为他们官方的话
相当于是把sop
个架构里面
相当把sop给融进来了
其实对于我们使用的人来说
首先第一步
我们需要把代码下下来
代码下下之后的话
然后第二步的话我们需要
我们其实对于我们使用者来说
只需要干一个事情
就是说他的安装也非常简单
安装的话你就用他这个
官方这个安装方式
然后get clone
clone完之后然后cd掉这个目录底下
然后我建议是用这个安装
因为我自己本地试了一下
用他这个源码构建好像有点问题
所以我建议大家也是用这个agents
来构建
就pip install agents来构建
用这个来构建
构建完了之后的话
然后紧接着进入代码目录
在开始之前的话
我稍微给大家这里要做一些感谢
我感谢agents这个项目方的作者
以及agents的这个项目的负责人
叫周王树鹏
周王树鹏应该是
就是说他的话
就是他给我帮了很多忙
这周王春鹏非常感谢
然后还有一个就是说
是这个叫江湖一黑
因为他是这个项目的这个
是他开发的作者
然后也非常感谢你
然后又帮了我很多忙
把这个项目给跑通了
也对我解释给大家来聊这个项目
提供了很多思路
非常感谢两位
OK我们下面进入正题
然后这个如果说你把这个执行完之后
基本上就可以下面进入测试了
其实它的玩法其实很简单
比如说官方其实提供了一个
他们提供了一些个example一些例子
然后这些例子的话
他又区分他有一些区分目录
比如说有这个单体的agent
有多体agent
还有这个界面的这种
还有这个社区agent
我们这里的话测试
我刚才给大家测试的是单体agent
单体agent里面
我给大家测试的shopping assistance
我们其实在用的时候
我们在构建的时候
其实只需要重点是改造的是
这个config.json
其实你如果是要建立自己的agent
在这个项目里面
你只需要创建一个config.json就可以了
就是很方便很方便
创建完它之后
然后这里做API的一个相当替换
把API替换了
然后这个做代理
如果你本地运行的话
或者说你在国内服务器运行的话
你要访问国外的东西的话
我建议你就做一个代理
如果没有的话就不用考虑它
然后这里还有聊天的history的一个配置
这里是5
为什么这个什么意思
我跟你做者也聊了一下
他说这个参数的设置
指的是针对对话之前的5轮
然后做一个总结做一个summary
就是说他在每一步
他有一个状态的一个变化
所以他要在每一步在聊天的时候
他都需要往前去推5步
推5轮对话
然后来Cale的5轮对话
大概聊的是什么东西
然后再进行进一步的响应
所以这里设置这个
这个参数影响的是
就是你希望大模型对你的之前的
意思的Cale的话
意思的抓取大概要抓取5轮对话
还是6轮对话7轮对话的意思
这个的话大家注意一下
然后再有这个就是
这个是指的是分类的一个
相当于减缩的一个法值
就相当匹配分类的一个
这么一个法值
我们比如说在问的问题
比如说我现在要买一个
比如前面刚才那个例子
我要买个衣服
那么他就会在衣服这个分类
帮我去从话里面提出衣服这个关键词
然后再帮我找电商这个场景里面
对应的衣服这个分类
这个是干这个事情的
然后再有这个file size
然后在优论内部
优论内部这里的话
指的是这个什么呢
它指的是这个叫就是说谁跟你对话
就指的是这个agent
就哪个agent给你对话
你这个agent可以设置多个
你也可以不设置
如果说你设置多个的话
那么他就会有多个agent
就是来同时跟你聊
就如果说你设置一个
那就单体的一个agent
所以这里大家注意一下user name
你也可以不设
不设的话他就自己对话
相当于自己跟自己对话
就agent他们自己对话ok
然后这块的话就是说
这是一个大的一个关键词
然后把它收起来
然后这块是就是大母亲的一个配置
然后大母亲这个配置
然后这个配置完之后的话
紧接着就进入了root
root这个什么意思
root就是指的意思是
当你发起一个请求的时候
他这个就是说
当你发起请求的时候
有哪个有哪个地方给你处理
这个shop state的话
对应的是下面这个地方
就是说他相当于是对应了
shopping state
对这个地方开始给你做处理
就是说shopping state这个地方
当你就是说发起一个对话的时候
那么的话首先他这个会判断
首先是由这个开始对话
那么他就会跳到这个地方
然后比如说设定角色是一个
shopping的一个商场的一个助理
然后还有用户两个角色
然后这个时候的话
就是说这块有控制器
然后一些控制控制器
这个地方本质就是什么呢
这个地方本质它对应的是sop
跟我们sop是对应关系的
然后这块有一些环境变量设置
比如说我要跟你聊天对吧
就然后我这个机器的话
机器人肯定是有一个初步的一个设定
就是这些系统设置
我要求他必须是商场的工作人员
然后一二三这块有些约束
然后这块有一个开始角色是什么
就开始shopping assistance
然后再有开始的查询
他可能问我要买什么
然后这个的话就都是做设定的
其实你如果说对你自己的产品的话
自己的一个场景的话
你可以在这里的话做一些什么呢
做一些改动
你可以自己做改动的
比如说我们刚才看的像这个场景里面
他第一步他就问我要买什么对吧
我其实可以把这个我把这句话换了
那么他第一句跟我聊的时候
他就可能就不是问这个了
比如说咱们在电商的里面的话
你其实第一句的话
你在这里你把它换掉就好了
对吧
然后完了之后的话
紧接着你可能跟他聊天的时候
比如说我说店里有什么东西
然后他可能会做要做出一个判断
做出一个shopping assistance的话
作为这个shopping assistance
以及用这个风格跟我聊天
然后给我一些个回答
然后他的目标是帮用户去导购
去一个导购商品
然后的话这个规则什么
就约束他一些规则
然后这里还有很关键的一东西
就是外部的一些个数据
因为我们这里其实我们可以看到
这里面其实调用了一些外部的数据
那么其实他也支持你直接调用外部数据
比如说他其实这里他构建是从哪里构建
他是从哪里构建
他是从这个地方构建出来的
从这个地方
他这个是目录这个对吧
bb baby这个地方
他现在放在这个地方了
当然如果你是这个直接是APR的话
也是可以的也是可以
他这里面也其实也用到的APR的一些东西
还有底下这个shopping assistance
也用了这个toy的这个
assistance就是相当于商品的一些介绍情况
商品介绍情况
如果说用这个就是说白了
就是直接调用APR
那他也是支持这个调用APR
调用APR的话他是在这个里面
然后具体的话
因为这个是我们可以把它换成自己的APR
就是说这个的话
大家可以在这里面找
我这里不说了
有兴趣可以自己找
因为这个的话
目前他们官方可能后面还要迭代一版
因为里面现在的APR是他们提前设置的一个APR
但这APR肯定会要改掉的
改成自己的
ok然后完之后的话
其实你把这个地方配置好之后
这个地方他很关键的一个地方在
很关键一个地方在这里state
state里面又分为好几个部分
又分为shopping state
shopping state里面又分为这个控制器了
这些个就是这里面就是说很有意思
比如说shopping state
他代表的是一个state状态
那么对于多体的agent
就是如果说你是用的是多agent
这种方式的话
比如说软件这个我们举个例子
这个是软件开发的agent
软件开发这个agent
这个里面就首先第一步也是一样的配置
你需要把这个换成openR的APR
这个地方换成这个代理
然后这块的话设置
比如说1000或者怎么你自己设置
然后底下有对用的一些地方
我给大家跳重点
前面这个都不说了
就是开始是从design state这个开始的
然后这个地方在哪
就是说像你问第一句话的时候
他首先从这开始的
这个里面就涉及多个任务了
就涉及多个state了
就多个相当sop的多个流程
比如说有设计阶段
有开发阶段
还有测试阶段对吧
设计多个agent多个agent
然后这里还设置了多个角色
比如说有老板
有boss这个老板agent里面有boss老板
有开发的
还有这个artist有架构师
有开发人员有测试debug的
还有编码人员有不同的角色
不同角色干不同的事情
然后就是上面上的角色
和这个基本的一些配置都约定好了
对吧
这个config比如config这个约定好了
然后lm这个约定好了
然后relation就是相互之间的几大的
sop里面的三个中央角色
三个中央部分也约束好了
然后agent也约束好了
就不同有多少个人参与对吧
多个agent的参与
然后紧接着到state这个地方
这个地方的话基本上也是一样的
相当于也是
他把这个相当于有几个状态设计
比如说第一个
是这个设计状态
然后这个里面就对应的
他要对设计整个流程的一个约束
比如说这里面设计这个流程
可能设计角色有boss
有架构师有ladder
相当于按这几个部分
来进行一步一步来走
然后完了之后的话这边有控制器
控制器的话这个意思就是按顺序
这个先思考
然后再他你问出一个
比如说我要做一个游戏
然后首先boss的话
针对需求要补充一下
然后完了之后这个
就是架构师再补充一下
ladder再补充一下
他们再补充一下
然后这个order是意思的按顺序来
大家各自针对这个任务来进行描述
那这块有对应的这个cd term
promet还last这个这些东西
你可以做一些约束
然后环境的这个promet
指的是就我们一边设定他这个干嘛的
比如他这里设定这个什么
就boss的话呈现一个需求
假设一个这个就是boss呈现
假设一个场景就是boss来呈现需求
然后这个架构师来规划这个想
就是这个python的一个响应吧
根据需求来规划这个python的架构
然后后面ladder是角色是提供反馈之类等等
这些基础条件约束好了之后
每一轮对话cd term他们都会把这个带上
然后让这个直接给你回答
比如第一句的话他问的是
请写一个代码对这个目标
目标游戏写一个代码
然后底下再到boss这里
boss就是agent的这个agent state
然后boss在干嘛esn
有几个boss的一个约束
boss他要是要执行什么任务
比如他的风格
他的任务他是要干嘛的
然后他的这个入规规则
或者约束他的条件
然后以及他的目标
然后包括底下架构师各自做了一些约束
包括上面这个design设计完之后
紧接着进入第二步的
就像咱们公司里面一般完成任务
开发一个任务一样
第一步你肯定是要
对吧确认需求架构师设计各方面完了
对吧
也就是这里对应的第一步的这个
叫这个designagent
然后完之后紧接着develop state
底下一样的也是各个角色
然后来对应develop state完了之后
然后debug这个部分
然后这个部分完了之后
像这三个部分完成了
然后这三个部分的关系的话
它是在这里有一个
上面是有一个对应关系的
就是我刚刚给大家讲
relation这里有对应关系的
就是哪一步完了到哪一步
它是有这个关系好吧
ok这就是这个项目的一个
大概的一个内部结构的一个构建
如果我们自己要构建自己的agent
也是一个原理
相当于它官方提供了一些事例
比如说像聊天的agent
像这个客户服务的agent
还有这个oculis的这个agent
就这个agent也是
这个是一个偏电商的一个agent
有兴趣也可以自己试一下
它这里有这个数据
相当于你也可以去运行了
然后还有shopping
就是买东西的agent
然后这单体的
然后上面还有这个软件开发的agent
然后这个写novel这个agent
这个也有
就是说所以的话
它官方其实提供了很多这个
不同各种各样的这个agent
这里这应该是写
就是画图
画图写东西novel
然后还有debit
debit这个就是这个也是一个agent
所以的话它官方提供了很多事例
我觉得这个事例也是蛮有意思的
对我们学习怎么来运用它
是非常非常关键的
有兴趣可以下去自己试一下
它有这么几个事例
然后还有这个gradio的这个
基本的一些个配置
这个都可以自定义的
有兴趣的可以自己去定义
有兴趣可以自己定义
然后还有这个agent
还有这里
可能就是社区的这个解释之类的
然后所以说我今天为什么介绍这个项目
因为这个项目的话是
很那个应该说是
它的架构设计层面是非常好用的
你如果要基于它来构建一个销售agent
是非常方便的
基于它构建销售
你直接把这个shopping这个acent
给改一下就可以了
基于它把config改一下
如果你要自己自定义的话
那你再重新自定义一个就好了
像这里面这些参数
其实我刚刚给大家都已经扫过了
像root的话就是从哪个地方
从哪个state开始
它这里的state代表的
其实sop里面的一个部分
和一个部分一个工作流
就是第一个state
第二个state
第三个state
它是有个在这个state里面
是有一个顺序的
比如在这里面是有几个顺序的
它是分顺序的
比如有shopping state
你底下可以再增加其他的state
都是可以的
像第一步完成之后有第二步
它相当于就是把多个
我们看一下它的特点
第一个特点它有多个agent
就多体agent
第二个特点
就是把sop引进来
所以这是它最大
有的sop它就体现在state这里
就是说这是它最大的优势
相当于在这个配置文件里面
你相当于把你的agent的角色
还有多少个agent的角色
然后有多少个sop的流程
在这里规范出来
那么你agent就能帮你
自动去执行这些任务
举个例子
比如说比如像我这里
安装的时候其实很简单
官方已经说了很久
你就把这个装了
这个装了然后紧接着下一步
就是把这个执行一下就行了
就执行这个cd到example底下
把这个执行一下
把这个地方换成
这个你对应要执行的
那个sego
比如说比如说我这里用的是
比如说我要执行商品对吧
我为了给大家演示方便
我就直接运行
great deal有界面的这个好吧
比如说我就运行这个
cd到这个目录底下的话
你就运行一下它
比如说我给大家运行这个商品
大家看一下
商品assistant过来运行这个
这个是基于great deal
对它这个需要速度
速度我这样
我这个因为它那个刚才那个什么
它那个权限不足
权限不足
我就用速度来给大家运行一下
大家看一下
ok这个时候应该是ok了
就是说运行出来之后的话
我们就可以访问他
稍等他这个时候的话
你就可以在界面上去跟他聊天了
因为我们刚才运行的是这个
这个大家稍等一下
这个反正需要点时间
所以这个项目的话是目前
而且就是我跟他们那个项目方
聊了一下
就他们这个项目的话
就是他们已经其实落地过一些
这个销售的机器人了
所以他们在营销场景应该是
非常非常好用的一个工具
而且他们已经落地了一些个场景
包括他们提供的官方提供的事例
很明显就是实际场景里面的
他不是一个就等于一个简单的一个
就是说完全是没有经过验证的
这个项目其实是有些案例
是经过验证的
所以大家基于他再来构建的话
是非常非常方便的
ok我们看一下他执行完了吗
执行完了这不是我们就访问他就好了
我给大家访问一下
ok我们来访问一下
大家看这个时候他欢迎来了小店对吧
我就说你我问他
你们店里卖什么东西呢
我问一下他们店里卖什么东西
大家看一下
就是我们看一下效果
他这个时候跟我细聊
就是问我就聊这个店里的话
他能卖什么东西
你看他说欢迎来到店铺
他们有一个很多商品可以选择
然后问我有什么这个特殊想要找的吗
因为我是自动翻译的
其实不自动翻译他主要是英文
我其实可以不自动翻译
就是英文比如说我想
我想买
苹果手机
比如说我说我想买苹果手机
我们看一下他的答复
其实这个时候因为他这里
他跟知识库最大的区别
就是说他其实有引导作用
他不是一个简单的
就是知识库的一个东西
知识库是做不到这个程度的
知识库只能说是
你问他iphone手机好不好用
他可能你找查查智智
查查库里面有没有这个回答
这个是直接引导你买东西的
然后他说欢迎等等
他给我推荐苹果手机的购买链接
你看到了吧
他给我推荐过来了
这就是一个相对比较有意思的
一个交互场景
这就比较意思
就刚才执行
大家也看到他就这样执行的
这比较好和有意思
对吧
就是反正就是说我觉得这个
这个产品的话
就是真的是我们基于他
如果说我基于他再改造一下
那就更好玩了
这个是允许你自己DIV改造的
非常方便非常方便的
我希望这个产品的话就今天
重点给大家介绍一下
也用的时间比较长
希望对大家有些启发
然后另外还有一个点
就是我要给大家强调说一下
就是说在这个地方
那在这个哪个地方呢
就是这个
他这个地方是他是可以配置
官方是允许你去配置这个叫
这个他的模型
他的用的embounding的这个模型的话
是用的是这个hungry face上的这些model
那么的话
就是说其实我们他官方现在用的是
那个摆穿的
我记得好像是摆穿的这个模型
比如说我们看一下看一眼
他5G他好像用摆穿的
比如像他这个里面
就是他这个地方
他这个地方是配置他embounding的
这个embounding的这个model的这个模型的
这个的话就是你就用hungry face那边
的话把它复制过来就可以了
这块的话用的这个你也可以换成m3e
可以换更好的
这个是他这个model好像当时说
是处理中文会处理好一点
你自己想换你也可以换好吧
这个是可以换的
ok只要他是遵循这个transform架构就可以
ok这就是今天要介绍的这个agents这个项目
这个项目对于大家构建像多体
就是两个方面
第一个方面就是多个agents的一个综合体
可控的多个agents综合体
然后第二个的话是sop引入
两个方面就是他的结合
在这个项目里面是体现的非常的好
也对于我们直接用的实际场景里面
是非常有价值的
我可以我给大家看一下他论文
他论文里面的话就是说
对比了一下现在架构的一个情况
像auto jpt meta jpt这些都对比了
其实他是支持这个像工具的使用
包括就是长短记忆的这个就是切入
像其他的像meta jpt
kmail 还有agentsverse这些都不支持
然后再有多体agents他也支持
然后人类的这个interaction这个也支持
然后还有这个就是simple的这个control
这个就是sop那部分
他也支持sop的自定义
像其他的基本不支持
这是他最大的特点
我希望这个对比的话
大家有兴趣可以自己下去仔细看一下
这个论文写得也非常好
里面有很多例子
有兴趣可以自己研究一下好吧
ok这是关于今天要介绍的agents的项目
就是说我最后的话再声明一下
ai gc link的话是一个公益组织
就是也是为了帮助
未来想拥抱ai的行业的超级个体的话
能够更快的拥抱的这个行业
能参与的行业的发展进程里面
然后的话就是我们也愿意为有能力
以有想法的开发者给大家做助力
比如说像市场的冷启动
还有这个资本助力各方面我们都愿意助力
大家有兴趣的话就是也可以联系我
这边都免费的有兴趣
好谢谢大家
我们今天讲到这里谢谢
